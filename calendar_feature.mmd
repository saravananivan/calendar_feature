@startuml
set namespaceSeparator ::

class "calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendar" {
  +GettingStartedCalendarState createState()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleView" <|-- "calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendar"

class "calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" {
  -List<String> _subjectCollection
  -List<Color> _colorCollection
  -_MeetingDataSource _events
  -DateTime _minDate
  -DateTime _maxDate
  -List<CalendarView> _allowedViews
  -List<String> _viewNavigationModeList
  -List<String> _numberOfDaysList
  -GlobalKey<State<StatefulWidget>> _globalKey
  -ScrollController _controller
  -CalendarController _calendarController
  -List<DateTime> _blackoutDates
  -bool _showLeadingAndTrailingDates
  -bool _showDatePickerButton
  -bool _allowViewNavigation
  -bool _showCurrentTimeIndicator
  -ViewNavigationMode _viewNavigationMode
  -String _viewNavigationModeString
  -bool _showWeekNumber
  -String _numberOfDaysString
  -int _numberOfDays
  +void initState()
  +Widget build()
  -void _onViewChanged()
  +void addAppointmentDetails()
  +void onViewNavigationModeChange()
  +void customNumberOfDaysInView()
  +Widget buildSettings()
  -SfCalendar _getGettingStartedCalendar()
}

"calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" o-- "calendar_feature::shift_scheduler::getting_started.dart::_MeetingDataSource"
"calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState" o-- "calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode"
"calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" <|-- "calendar_feature::shift_scheduler::getting_started.dart::GettingStartedCalendarState"

class "calendar_feature::shift_scheduler::getting_started.dart::_MeetingDataSource" {
  +List<_Meeting> source
  +List<dynamic> appointments
  +DateTime getStartTime()
  +DateTime getEndTime()
  +bool isAllDay()
  +String getSubject()
  +Color getColor()
  +_Meeting convertAppointmentToObject()
}

"calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource" <|-- "calendar_feature::shift_scheduler::getting_started.dart::_MeetingDataSource"

class "calendar_feature::shift_scheduler::getting_started.dart::_Meeting" {
  +String eventName
  +DateTime from
  +DateTime to
  +Color background
  +bool isAllDay
}

"calendar_feature::shift_scheduler::getting_started.dart::_Meeting" o-- "dart::ui::Color"

class "calendar_feature::shift_scheduler::sample_browser.dart::SampleBrowser" {
  +_SampleBrowserState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::SampleBrowser"

class "calendar_feature::shift_scheduler::sample_browser.dart::_SampleBrowserState" {
  -SampleModel _sampleListModel
  +void initState()
  +Widget build()
  -void _initializeProperties()
}

"calendar_feature::shift_scheduler::sample_browser.dart::_SampleBrowserState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::_SampleBrowserState"

class "calendar_feature::shift_scheduler::sample_browser.dart::HomePage" {
  +_HomePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::HomePage"

class "calendar_feature::shift_scheduler::sample_browser.dart::_HomePageState" {
  +SampleModel sampleListModel
  +GlobalKey<ScaffoldState> scaffoldKey
  +ScrollController controller
  +void initState()
  -void _handleChange()
  +Widget build()
  -Widget _getScrollableWidget()
  -Widget _getCustomScrollWidget()
  -void _addColors()
  -List<Widget> _getSearchedItems()
}

"calendar_feature::shift_scheduler::sample_browser.dart::_HomePageState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::sample_browser.dart::_HomePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"calendar_feature::shift_scheduler::sample_browser.dart::_HomePageState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::_HomePageState"

class "calendar_feature::shift_scheduler::sample_browser.dart::_PersistentHeaderDelegate" {
  -SampleModel? _sampleListModel
  +double maxExtent
  +double minExtent
  +Widget build()
  +bool shouldRebuild()
}

"calendar_feature::shift_scheduler::sample_browser.dart::_PersistentHeaderDelegate" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::sliver_persistent_header.dart::SliverPersistentHeaderDelegate" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::_PersistentHeaderDelegate"

class "calendar_feature::shift_scheduler::sample_browser.dart::_CategorizedCards" {
  +_CategorizedCardsState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::_CategorizedCards"

class "calendar_feature::shift_scheduler::sample_browser.dart::_CategorizedCardsState" {
  +SampleModel model
  -double _cardWidth
  +Widget build()
  -Widget _getCategorizedCards()
  -Widget _getCategoryWidget()
  -List<Widget> _getControlListView()
}

"calendar_feature::shift_scheduler::sample_browser.dart::_CategorizedCardsState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::sample_browser.dart::_CategorizedCardsState"

class "calendar_feature::shift_scheduler::shift_scheduler.dart::ShiftScheduler" {
  +_ShiftSchedulerState createState()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleView" <|-- "calendar_feature::shift_scheduler::shift_scheduler.dart::ShiftScheduler"

class "calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftSchedulerState" {
  -List<String> _subjectCollection
  -List<Color> _colorCollection
  -List<Appointment> _shiftCollection
  -List<CalendarResource> _employeeCollection
  -List<TimeRegion> _specialTimeRegions
  -List<String> _nameCollection
  -List<String> _userImages
  -List<String> _colorNames
  -List<String> _timeZoneCollection
  -CalendarController _calendarController
  -List<CalendarView> _allowedViews
  -List<DateTime> _visibleDates
  -bool _isAllDay
  -String _subject
  -int _selectedColorIndex
  -Appointment? _selectedAppointment
  -_ShiftDataSource _events
  +void initState()
  -void _onViewChanged()
  -void _onCalendarTapped()
  +Widget build()
  -void _addResourceDetails()
  -void _addAppointmentDetails()
  -void _addResources()
  -void _addSpecialRegions()
  -void _addAppointments()
  -Widget _getSpecialRegionWidget()
  -SfCalendar _getShiftScheduler()
}

"calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftSchedulerState" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftSchedulerState" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftSchedulerState" o-- "calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftDataSource"
"calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" <|-- "calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftSchedulerState"

class "calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftDataSource" {
}

"calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource" <|-- "calendar_feature::shift_scheduler::shift_scheduler.dart::_ShiftDataSource"

class "calendar_feature::shift_scheduler::appointment_editor.dart::CalendarAppointmentEditor" {
  +_CalendarAppointmentEditorState createState()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleView" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::CalendarAppointmentEditor"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" {
  -List<String> _subjectCollection
  -List<Appointment> _appointments
  -bool _isMobile
  -List<Color> _colorCollection
  -List<String> _colorNames
  -int _selectedColorIndex
  -List<String> _timeZoneCollection
  -List<DateTime> _visibleDates
  -_DataSource _events
  -Appointment? _selectedAppointment
  -bool _isAllDay
  -String _subject
  -List<CalendarView> _allowedViews
  +ScrollController controller
  +CalendarController calendarController
  -GlobalKey<State<StatefulWidget>> _globalKey
  -CalendarView _view
  +void initState()
  +void didChangeDependencies()
  +Widget build()
  -void _onViewChanged()
  -void _onCalendarTapped()
  -List<Appointment> _getAppointmentDetails()
  -SfCalendar _getAppointmentEditorCalendar()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_DataSource"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarAppointmentEditorState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_PickerChangedDetails" {
  +int index
  +Object? resourceId
  +_SelectRule? selectedRule
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_PickerChangedDetails" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_DataSource" {
  +List<Appointment> source
  +List<dynamic> appointments
}

"calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_DataSource"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPicker" {
  +List<Color> colorCollection
  +int selectedColorIndex
  +List<String> colorNames
  +SampleModel model
  +void Function(_PickerChangedDetails) onChanged
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPicker" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPicker" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::void Function(_PickerChangedDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPicker"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPickerState" {
  -int _selectedColorIndex
  +void initState()
  +void didUpdateWidget()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarColorPickerState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePicker" {
  +List<CalendarResource> resourceCollection
  +void Function(_PickerChangedDetails) onChanged
  +SampleModel model
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePicker" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::void Function(_PickerChangedDetails)"
"calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePicker" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePicker"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePickerState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_ResourcePickerState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePicker" {
  +Color backgroundColor
  +List<String> timeZoneCollection
  +int selectedTimeZoneIndex
  +SampleModel model
  +void Function(_PickerChangedDetails) onChanged
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePicker" o-- "dart::ui::Color"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePicker" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePicker" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::void Function(_PickerChangedDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePicker"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePickerState" {
  -int _selectedTimeZoneIndex
  +void initState()
  +void didUpdateWidget()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CalendarTimeZonePickerState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::PopUpAppointmentEditor" {
  +SampleModel model
  +Appointment? newAppointment
  +List<Appointment> appointment
  +CalendarDataSource<Object?> events
  +List<Color> colorCollection
  +List<String> colorNames
  +Appointment selectedAppointment
  +List<String> timeZoneCollection
  +List<DateTime> visibleDates
  +_PopUpAppointmentEditorState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::PopUpAppointmentEditor" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::PopUpAppointmentEditor" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::PopUpAppointmentEditor" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::PopUpAppointmentEditor"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_PopUpAppointmentEditorState" {
  -int _selectedColorIndex
  -int _selectedTimeZoneIndex
  -DateTime _startDate
  -DateTime _endDate
  -TimeOfDay _startTime
  -TimeOfDay _endTime
  -bool _isAllDay
  -String _subject
  -String? _notes
  -String? _location
  -List<Object>? _resourceIds
  -List<CalendarResource> _selectedResources
  -List<CalendarResource> _unSelectedResources
  +void initState()
  +void didUpdateWidget()
  -void _updateAppointmentProperties()
  +Widget build()
  -Widget _getResourceEditor()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_PopUpAppointmentEditorState" o-- "flutter::src::material::time.dart::TimeOfDay"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_PopUpAppointmentEditorState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditorWeb" {
  +SampleModel model
  +Appointment? newAppointment
  +List<Appointment> appointment
  +Appointment selectedAppointment
  +List<Color> colorCollection
  +List<String> colorNames
  +CalendarDataSource<Object?> events
  +List<String> timeZoneCollection
  +List<DateTime> visibleDates
  +_AppointmentEditorWebState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditorWeb" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditorWeb" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditorWeb" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditorWeb"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" {
  -int _selectedColorIndex
  -int _selectedTimeZoneIndex
  -DateTime _startDate
  -TimeOfDay _startTime
  -DateTime _endDate
  -TimeOfDay _endTime
  -bool _isAllDay
  -String _subject
  -String? _notes
  -String? _location
  -bool _isTimeZoneEnabled
  -List<Object>? _resourceIds
  -List<CalendarResource> _selectedResources
  -List<CalendarResource> _unSelectedResources
  -String _selectedRecurrenceType
  -String _selectedRecurrenceRange
  -String _ruleType
  -int? _count
  -int? _interval
  -int? _month
  -int? _week
  -int? _lastDay
  -int _dayOfWeek
  -int _weekNumber
  -int _dayOfMonth
  -double _padding
  -double _margin
  -DateTime _selectedDate
  -DateTime _firstDate
  -RecurrenceProperties? _recurrenceProperties
  -RecurrenceType _recurrenceType
  -RecurrenceRange _recurrenceRange
  -List<WeekDays>? _days
  -IconData? _monthDayRadio
  -IconData? _weekDayRadio
  -IconData? _lastDayRadio
  -Color? _weekIconColor
  -Color? _monthIconColor
  -Color? _lastDayIconColor
  -String? _monthName
  -String? _weekNumberText
  -String? _dayOfWeekText
  +void initState()
  +void didUpdateWidget()
  -void _updateAppointmentProperties()
  -void _updateWebRecurrenceProperties()
  -void _neverRule()
  -void _dailyRule()
  -void _weeklyRule()
  -void _monthlyRule()
  -void _yearlyRule()
  -void _noEndDateRange()
  -void _endDateRange()
  -void _countRange()
  -void _addInterval()
  -int _getWeekNumber()
  -void _removeInterval()
  -void _monthWeekIcon()
  -void _monthDayIcon()
  -void _monthLastDayIcon()
  -void _addDay()
  -void _removeDay()
  -void _addCount()
  -void _removeCount()
  -void _webSelectWeekDays()
  -void _webInitialWeekdays()
  -Widget _getResourceEditor()
  +Widget build()
  -Widget _lastDayOfMonth()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "flutter::src::material::time.dart::TimeOfDay"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "flutter::src::widgets::icon_data.dart::IconData"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorWebState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" {
  +SampleModel model
  +Appointment? selectedAppointment
  +CalendarElement targetElement
  +DateTime selectedDate
  +List<Color> colorCollection
  +List<String> colorNames
  +CalendarDataSource<Object?> events
  +List<String> timeZoneCollection
  +CalendarResource? selectedResource
  +_AppointmentEditorState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarElement"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::AppointmentEditor"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" {
  -int _selectedColorIndex
  -int _selectedTimeZoneIndex
  -DateTime _startDate
  -TimeOfDay _startTime
  -DateTime _endDate
  -TimeOfDay _endTime
  -bool _isAllDay
  -String _subject
  -String? _notes
  -String? _location
  -List<Object>? _resourceIds
  -List<CalendarResource> _selectedResources
  -List<CalendarResource> _unSelectedResources
  -RecurrenceProperties? _recurrenceProperties
  -RecurrenceType _recurrenceType
  -RecurrenceRange? _recurrenceRange
  -int _interval
  -_SelectRule? _rule
  +void initState()
  +void didUpdateWidget()
  -void _updateAppointmentProperties()
  -void _updateMobileRecurrenceProperties()
  -Widget _getAppointmentEditor()
  +Widget build()
  -Widget _getResourceEditor()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" o-- "flutter::src::material::time.dart::TimeOfDay"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_AppointmentEditorState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" {
  +SampleModel model
  +Appointment? selectedAppointment
  +RecurrenceProperties? recurrenceProperties
  +Color appointmentColor
  +CalendarDataSource<Object?> events
  +void Function(_PickerChangedDetails) onChanged
  +_SelectRuleDialogState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "dart::ui::Color"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::void Function(_PickerChangedDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialog"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState" {
  -DateTime _startDate
  -RecurrenceProperties? _recurrenceProperties
  -RecurrenceType _recurrenceType
  -RecurrenceRange _recurrenceRange
  -int _interval
  -_SelectRule? _rule
  +void initState()
  +void didUpdateWidget()
  -void _updateAppointmentProperties()
  -void _updateRecurrenceType()
  +Widget build()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRuleDialogState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialog" {
  +SampleModel model
  +Appointment selectedAppointment
  +CalendarDataSource<Object?> events
  +_DeleteDialogState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialog" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialog" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialog" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialog"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialogState" {
  -_Delete _delete
  +void initState()
  +Widget build()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialogState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Delete"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_DeleteDialogState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog" {
  +SampleModel model
  +Appointment newAppointment
  +Appointment selectedAppointment
  +RecurrenceProperties? recurrenceProperties
  +CalendarDataSource<Object?> events
  +_EditDialogState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialog"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialogState" {
  -_Edit _edit
  +void initState()
  +Widget build()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialogState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Edit"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_EditDialogState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" {
  +SampleModel model
  +Appointment selectedAppointment
  +Color appointmentColor
  +CalendarDataSource<Object?> events
  +RecurrenceProperties? recurrenceProperties
  +_CustomRuleState createState()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" o-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" o-- "dart::ui::Color"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRule"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState" {
  -DateTime _startDate
  -_EndRule? _endRule
  -RecurrenceProperties? _recurrenceProperties
  -String? _selectedRecurrenceType
  -String? _monthlyRule
  -String? _weekNumberDay
  -int? _count
  -int? _interval
  -int? _month
  -int? _week
  -int _dayOfWeek
  -int _weekNumber
  -int _dayOfMonth
  -DateTime _selectedDate
  -DateTime _firstDate
  -RecurrenceType _recurrenceType
  -RecurrenceRange _recurrenceRange
  -List<WeekDays>? _days
  -double _width
  -bool _isLastDay
  +void initState()
  -void _updateAppointmentProperties()
  -void _updateCustomRecurrenceProperties()
  -void _dayRule()
  -void _weekRule()
  -void _monthRule()
  -void _yearRule()
  -void _rangeNoEndDate()
  -void _rangeEndDate()
  -void _rangeCount()
  -void _monthlyWeek()
  -void _monthlyDay()
  -void _lastDayOfMonth()
  -int _getWeekNumber()
  -void _mobileSelectWeekDays()
  -void _mobileInitialWeekdays()
  -double _textSize()
  -Widget _getCustomRule()
  +Widget build()
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_EndRule"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState" o-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_CustomRuleState"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule" {
  +int index
  {static} +List<_SelectRule> values
  {static} +_SelectRule doesNotRepeat
  {static} +_SelectRule everyDay
  {static} +_SelectRule everyWeek
  {static} +_SelectRule everyMonth
  {static} +_SelectRule everyYear
  {static} +_SelectRule custom
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule"
"dart::core::Enum" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_SelectRule"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_Edit" {
  +int index
  {static} +List<_Edit> values
  {static} +_Edit event
  {static} +_Edit series
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_Edit" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Edit"
"dart::core::Enum" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Edit"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_Delete" {
  +int index
  {static} +List<_Delete> values
  {static} +_Delete event
  {static} +_Delete series
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_Delete" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Delete"
"dart::core::Enum" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_Delete"

class "calendar_feature::shift_scheduler::appointment_editor.dart::_EndRule" {
  +int index
  {static} +List<_EndRule> values
  {static} +_EndRule never
  {static} +_EndRule endDate
  {static} +_EndRule count
}

"calendar_feature::shift_scheduler::appointment_editor.dart::_EndRule" o-- "calendar_feature::shift_scheduler::appointment_editor.dart::_EndRule"
"dart::core::Enum" <|-- "calendar_feature::shift_scheduler::appointment_editor.dart::_EndRule"

class "calendar_feature::shift_scheduler::model::helper.dart::_FullViewSampleLayout" {
  +SubItem? sample
  +Widget? sampleWidget
  +Widget build()
}

"calendar_feature::shift_scheduler::model::helper.dart::_FullViewSampleLayout" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::helper.dart::_FullViewSampleLayout" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "calendar_feature::shift_scheduler::model::helper.dart::_FullViewSampleLayout"

abstract class "calendar_feature::shift_scheduler::model::sample_view.dart::SampleView" {
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::SampleView"

abstract class "calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" {
  +SampleModel model
  +bool isCardView
  +void initState()
  +void dispose()
  +Widget? buildSettings()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState"

class "calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleView" {
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleView" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleView"

class "calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleViewState" {
  -List<Locale> _supportedLocales
  +void initState()
  +Widget localizationSelectorWidget()
  -Widget _buildDirectionalityWidget()
  +Color? getColor()
  +Widget build()
  +Widget? buildSample()
  +void dispose()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SampleViewState" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleViewState"

class "calendar_feature::shift_scheduler::model::sample_view.dart::DirectionalitySampleView" {
}

"calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleView" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::DirectionalitySampleView"

class "calendar_feature::shift_scheduler::model::sample_view.dart::DirectionalitySampleViewState" {
  -List<TextDirection> _supportedTextDirection
  +void dispose()
  +void closeAllOverlay()
  +Widget textDirectionSelectorWidget()
}

"calendar_feature::shift_scheduler::model::sample_view.dart::LocalizationSampleViewState" <|-- "calendar_feature::shift_scheduler::model::sample_view.dart::DirectionalitySampleViewState"

class "calendar_feature::shift_scheduler::model::sample_view.dart::ChartSampleData" {
  +dynamic x
  +num? y
  +dynamic xValue
  +num? yValue
  +num? secondSeriesYValue
  +num? thirdSeriesYValue
  +Color? pointColor
  +num? size
  +String? text
  +num? open
  +num? close
  +num? low
  +num? high
  +num? volume
}

"calendar_feature::shift_scheduler::model::sample_view.dart::ChartSampleData" o-- "dart::ui::Color"

class "calendar_feature::shift_scheduler::model::sample_view.dart::SalesData" {
  +dynamic x
  +dynamic y
  +Color? color
  +DateTime? date
}

"calendar_feature::shift_scheduler::model::sample_view.dart::SalesData" o-- "dart::ui::Color"

class "calendar_feature::shift_scheduler::model::mobile_view.dart::LayoutPage" {
  +WidgetCategory? category
  +SampleModel? sampleModel
  +_LayoutPageState createState()
}

"calendar_feature::shift_scheduler::model::mobile_view.dart::LayoutPage" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::mobile_view.dart::LayoutPage" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::mobile_view.dart::LayoutPage"

class "calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState" {
  -SampleModel _model
  -WidgetCategory _category
  +void Function(void Function())? codeIconChangeSetState
  +void Function(void Function())? infoIconChangeSetState
  +SubItem? currentSample
  +bool isInitState
  -int _primaryTabIndex
  -int _secondaryTabIndex
  -bool _showIcon
  +void initState()
  +Color? getColor()
  +Widget build()
  -bool _checkSubItemsType()
  -List<Widget> _getSamples()
  -List<Widget> _getTabs()
  -List<Widget> _getFullViewSamples()
  -Widget? _getSettingsView()
  -List<Widget> _getCardViewSamples()
  -List<Widget> _getChildTabViewChildren()
  -List<Widget> _getParentTabViewChildren()
  +void dispose()
}

"calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState" o-- "flutter::src::widgets::framework.dart::void Function(void Function())"
"calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::mobile_view.dart::_LayoutPageState"

class "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory" {
  +String? categoryName
  +List<dynamic>? controlList
  +int? mobileCategoryId
  +int? webCategoryId
  +int? selectedIndex
  +List<dynamic>? platformsToHide
}

class "calendar_feature::shift_scheduler::model::model.dart::Control" {
  +String? title
  +String? description
  +String? image
  +String? status
  +int? controlId
  +String? displayType
  +List<SubItem>? sampleList
  +List<SubItem>? childList
  +List<dynamic>? subItems
  +bool? isBeta
  +List<dynamic>? platformsToHide
}

class "calendar_feature::shift_scheduler::model::model.dart::SubItem" {
  +String? type
  +String? displayType
  +String? title
  +String? key
  +String? codeLink
  +String? description
  +String? status
  +String? sourceLink
  +String? sourceText
  +List<dynamic>? subItems
  +bool? needsPropertyPanel
  +String? categoryName
  +String? breadCrumbText
  +int? parentIndex
  +int? childIndex
  +int? sampleIndex
  +Control? control
  +List<dynamic>? platformsToHide
}

"calendar_feature::shift_scheduler::model::model.dart::SubItem" o-- "calendar_feature::shift_scheduler::model::model.dart::Control"

class "calendar_feature::shift_scheduler::model::model.dart::SampleModel" {
  {static} +SampleModel instance
  +bool isInitialRender
  +Map<String, Function> sampleWidget
  {static} -List<Control> _controlList
  {static} -List<WidgetCategory> _categoryList
  +List<WidgetCategory> categoryList
  +List<Control> controlList
  +List<Control> searchControlItems
  +List<SubItem> sampleList
  +List<SubItem> searchSampleItems
  +List<SubItem> searchResults
  +CustomSearchBar? searchBar
  +Color backgroundColor
  +Color paletteColor
  +Color currentPrimaryColor
  +ThemeData themeData
  +Color textColor
  +Color drawerTextIconColor
  +Color bottomSheetBackgroundColor
  +Color cardThemeColor
  +Color webBackgroundColor
  +Color webIconColor
  +Color webInputColor
  +Color webOutputContainerColor
  +Color cardColor
  +Color dividerColor
  +Size? oldWindowSize
  +Size currentWindowSize
  {static} -List<SampleRoute> _routes
  +List<SampleRoute>? routes
  +dynamic currentRenderSample
  +String? currentSampleKey
  +List<Color>? paletteColors
  +List<Color>? paletteBorderColors
  +List<Color>? darkPaletteColors
  +ThemeData? currentThemeData
  +Color currentPaletteColor
  +int selectedThemeIndex
  +bool isCardView
  +Locale? locale
  +TextDirection textDirection
  +bool isMobileResolution
  +ThemeData systemTheme
  +TextEditingController editingController
  +GlobalKey<State<StatefulWidget>> propertyPanelKey
  +bool needToMaximize
  +dynamic outputContainerState
  +SampleOutputContainerState webOutputContainerState
  +bool isWebFullView
  +bool isMobile
  +bool isWeb
  +bool isDesktop
  +bool isAndroid
  +bool isWindows
  +bool isIOS
  +bool isLinux
  +bool isMacOS
  +bool isPropertyPanelOpened
  +SampleRoute currentSampleRoute
  +SubItem sampleDetail
  {static} +List<SampleRoute> sampleRoutes
  +bool isPropertyPanelTapped
  -Set<void Function()> _listeners
  +void changeTheme()
  +void addListener()
  +void removeListener()
  #void notifyListeners()
}

"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::CustomSearchBar"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "dart::ui::Color"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "dart::ui::Size"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "dart::ui::Locale"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "dart::ui::TextDirection"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleRoute"
"calendar_feature::shift_scheduler::model::model.dart::SampleModel" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"flutter::src::foundation::change_notifier.dart::Listenable" <|-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"

class "calendar_feature::shift_scheduler::model::model.dart::SampleRoute" {
  +SubItem? subItem
  +GlobalKey<State<StatefulWidget>>? globalKey
  +String? routeName
  +State<StatefulWidget>? currentState
  +BuildContext? currentContext
  +Widget? currentWidget
}

"calendar_feature::shift_scheduler::model::model.dart::SampleRoute" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::model.dart::SampleRoute" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::model.dart::SampleRoute" o-- "flutter::src::widgets::framework.dart::State<StatefulWidget>"
"calendar_feature::shift_scheduler::model::model.dart::SampleRoute" o-- "flutter::src::widgets::framework.dart::BuildContext"
"calendar_feature::shift_scheduler::model::model.dart::SampleRoute" o-- "flutter::src::widgets::framework.dart::Widget"

class "calendar_feature::shift_scheduler::model::web_view.dart::WebLayoutPage" {
  +SampleModel? sampleModel
  +WidgetCategory? category
  +SubItem? subItem
  +String? routeName
  +_WebLayoutPageState createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::WebLayoutPage" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::WebLayoutPage" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::web_view.dart::WebLayoutPage" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::WebLayoutPage"

class "calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" {
  +GlobalKey<ScaffoldState> scaffoldKey
  +GlobalKey<State<StatefulWidget>> sampleInputKey
  +GlobalKey<State<StatefulWidget>> sampleOutputKey
  +_SampleInputContainer inputContainer
  +_SampleOutputContainer outputContainer
  +String? selectSample
  +_Popup popup
  +SampleModel model
  +WidgetCategory category
  +SubItem sample
  +List<SubItem>? subItems
  +String orginText
  +GlobalKey<State<StatefulWidget>> popUpKey
  +void initState()
  -void _handleChange()
  +void dispose()
  +Widget build()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_Popup"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_ExpansionKey" {
  +bool? isExpanded
  +int? expansionIndex
  +GlobalKey<State<StatefulWidget>>? globalKey
}

"calendar_feature::shift_scheduler::model::web_view.dart::_ExpansionKey" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"

class "calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer" {
  +SampleModel? sampleModel
  +WidgetCategory? category
  +Key? key
  +_WebLayoutPageState? webLayoutPageState
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer" o-- "flutter::src::foundation::key.dart::Key"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainer"

class "calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainerState" {
  +SampleModel sampleModel
  +WidgetCategory category
  +List<_ExpansionKey> expansionKey
  +bool initialRender
  +void refresh()
  +void initState()
  -Widget _expandedChildren()
  -List<Widget> _getSampleList()
  -bool _getSampleStatus()
  +dynamic onTapEvent()
  +Widget build()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainerState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainerState" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_SampleInputContainerState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" {
  +SampleModel? sampleModel
  +Key? key
  +String? orginText
  +SubItem? initialSample
  +WidgetCategory? category
  +List<SubItem>? initialSubItems
  +_WebLayoutPageState? webLayoutPageState
  +Map<String, Widget Function(BuildContext)>? routes
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" o-- "flutter::src::foundation::key.dart::Key"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_SampleOutputContainer"

class "calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" {
  +SubItem sample
  +List<SubItem> subItems
  +bool? needTabs
  +String orginText
  +int? tabIndex
  +GlobalKey<ScaffoldState> outputScaffoldKey
  -GlobalKey<State<StatefulWidget>> _propertiesPanelKey
  -_PropertiesPanel _propertiesPanel
  -bool _initialRender
  -GlobalKey<State<StatefulWidget>> _outputKey
  -double _tabTextWidth
  -ScrollController? _controller
  -void Function(void Function()) _setState
  -String? _prevCategory
  -String? _currentCategory
  -double? _prevPosition
  -Size? _prevSize
  -bool _isMaximized
  -bool? _hasLeftSideScrolled
  -bool _isLeftScrolled
  -double _scrollbarWidth
  -bool _isRightScrolled
  -bool? _hasRightSideScrolled
  -double? _prevScrollExtent
  -bool _needsPropertyPanel
  +void initState()
  -void _onTabScroll()
  +void refresh()
  -bool _checkPropertyPanelIsEnabled()
  +void dispose()
  +Widget build()
  -bool _isLeftSideScrolled()
  -bool _isRightSideScrolled()
  +void performMaximize()
  -Size _measureTextSize()
  -List<Widget> _getTabs()
  -List<Widget> _getTabViewChildren()
}

"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "flutter::src::widgets::framework.dart::void Function(void Function())"
"calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState" o-- "dart::ui::Size"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer" {
  +SampleModel? sampleModel
  +Key? key
  +SubItem? subItem
  +Function? sampleView
  +SampleOutputContainerState? sampleOutputContainerState
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer" o-- "flutter::src::foundation::key.dart::Key"
"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer" o-- "calendar_feature::shift_scheduler::model::web_view.dart::SampleOutputContainerState"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainer"

class "calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainerState" {
  +GlobalKey<State<StatefulWidget>>? renderOutputKey
  +Widget? renderWidget
  +void Function(void Function()) propertyPanelStateChange
  +bool show
  +GlobalKey<State<StatefulWidget>> propertyPanelWidgetKey
  -bool _needsPropertyPanel
  +void initState()
  -bool _checkPropertyPanelIsEnabled()
  +Color? getColor()
  +Widget build()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainerState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainerState" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainerState" o-- "flutter::src::widgets::framework.dart::void Function(void Function())"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_OutputContainerState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel" {
  +SampleModel? sampleModel
  +bool? openState
  +SubItem? subItem
  +Key? key
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel" o-- "flutter::src::foundation::key.dart::Key"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel"

class "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanelState" {
  +Animation<double> animation
  +AnimationController animationController
  +bool initialRender
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -Widget? _getSettingsView()
  +Widget build()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanelState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanelState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanelState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanelState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" {
  +SampleModel? sampleModel
  +Key? key
  +SubItem? item
  +WidgetCategory? category
  +_WebLayoutPageState? webLayoutPageState
  +_ExpansionKey? expansionKey
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "flutter::src::foundation::key.dart::Key"
"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "calendar_feature::shift_scheduler::model::model.dart::WidgetCategory"
"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_WebLayoutPageState"
"calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_ExpansionKey"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_TileContainer"

class "calendar_feature::shift_scheduler::model::web_view.dart::_TileContainerState" {
  +Widget build()
  -List<Widget> _getNextLevelChildren()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_TileContainerState"

class "calendar_feature::shift_scheduler::model::web_view.dart::_Popup" {
  +Key? key
  +bool? show
  +_PopupState createState()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_Popup" o-- "flutter::src::foundation::key.dart::Key"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_Popup"

class "calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" {
  +bool show
  -SubItem? _sampleDetails
  -GlobalKey<State<StatefulWidget>>? _currentWidgetKey
  +GlobalKey<ScaffoldState> scaffoldKey
  -_PropertiesPanel? _propertiesPanel
  -GlobalKey<State<StatefulWidget>> _propertiesPanelKey
  +SampleModel? model
  -bool _needsPropertyPanel
  +void initState()
  +void refresh()
  +void dispose()
  -bool _checkPropertyPanelIsEnabled()
  +Widget build()
  +Color? getColor()
}

"calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" o-- "calendar_feature::shift_scheduler::model::model.dart::SubItem"
"calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" o-- "calendar_feature::shift_scheduler::model::web_view.dart::_PropertiesPanel"
"calendar_feature::shift_scheduler::model::web_view.dart::_PopupState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::model::web_view.dart::_PopupState"

class "calendar_feature::shift_scheduler::widgets::search_bar.dart::CustomSearchBar" {
  +SampleModel? sampleListModel
  +SearchBarState createState()
}

"calendar_feature::shift_scheduler::widgets::search_bar.dart::CustomSearchBar" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::CustomSearchBar"

class "calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" {
  +SampleModel? sampleListModel
  +List<Control> duplicateControlItems
  +List<SubItem> duplicateSampleItems
  +List<Control> items
  +OverlayState over
  +Widget? searchIcon
  +Widget? closeIcon
  +FocusNode isFocus
  +bool isOpen
  -OverlayEntry _overlayEntry
  +String hint
  +List<OverlayEntry> overlayEntries
  -int? _selectionIndex
  -void Function(void Function()) _overlaySetState
  -FocusNode _rawKeyFocusNode
  -ScrollController _controller
  -GlobalKey<_RectGetterFromListViewState> _globalKey
  -Map<dynamic, dynamic> _keys
  -num _overlayHeight
  -num _itemHeight
  +void initState()
  +void dispose()
  +void didChangeMetrics()
  +void filterSearchResults()
  -void _removeOverlayEntries()
  -void _performKeyBoardEvent()
  -dynamic _navigateToSample()
  -void _scrollToDown()
  -void _scrollToUp()
  -List<int> _getVisibleIndexes()
  -OverlayEntry _createOverlayEntry()
  +Widget build()
}

"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "calendar_feature::shift_scheduler::model::model.dart::SampleModel"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::overlay.dart::OverlayState"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::overlay.dart::OverlayEntry"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::framework.dart::void Function(void Function())"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState" o-- "flutter::src::widgets::framework.dart::GlobalKey<_RectGetterFromListViewState>"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState"
"flutter::src::widgets::binding.dart::WidgetsBindingObserver" <|-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::SearchBarState"

class "calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListView" {
  +GlobalKey<_RectGetterFromListViewState>? key
  +Widget? child
  {static} +Rect? getRectFromKey()
  {static} +GlobalKey<_RectGetterFromListViewState> createGlobalKey()
  +_RectGetterFromListViewState createState()
}

"calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListView" o-- "flutter::src::widgets::framework.dart::GlobalKey<_RectGetterFromListViewState>"
"calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListView" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListView"

class "calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListViewState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::search_bar.dart::_RectGetterFromListViewState"

class "calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::AnimateOpacityWidget" {
  +double? opacity
  +Widget? child
  +ScrollController? controller
  +_AnimateOpacityWidgetState createState()
}

"calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::AnimateOpacityWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::AnimateOpacityWidget" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::AnimateOpacityWidget"

class "calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::_AnimateOpacityWidgetState" {
  -double? _opacity
  +void initState()
  -void _onScroll()
  +Widget build()
  +void dispose()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::animate_opacity_widget.dart::_AnimateOpacityWidgetState"

class "calendar_feature::shift_scheduler::widgets::expansion_tile.dart::CustomExpansionTile" {
  +Widget? title
  +void Function(bool)? onExpansionChanged
  +List<Widget>? children
  +Color? backgroundColor
  +Color? headerBackgroundColor
  +bool? initiallyExpanded
  +_ExpansionTileState createState()
}

"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::CustomExpansionTile" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::CustomExpansionTile" o-- "flutter::src::foundation::basic_types.dart::void Function(bool)"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::CustomExpansionTile" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::expansion_tile.dart::CustomExpansionTile"

class "calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" {
  -Animatable<double>? _easeOutTween
  -Animatable<double>? _easeInTween
  -Animatable<double>? _halfTween
  -ColorTween? _borderColorTween
  -ColorTween? _headerColorTween
  -ColorTween? _iconColorTween
  -ColorTween? _backgroundColorTween
  -AnimationController _controller
  -Animation<double>? _iconTurns
  -Animation<double>? _heightFactor
  -Animation<Color?>? _borderColor
  -Animation<Color?>? _headerColor
  -Animation<Color?>? _iconColor
  -Animation<Color?>? _backgroundColor
  -bool _isExpanded
  +void initState()
  +void dispose()
  -void _handleTap()
  -Widget _buildChildren()
  +void didChangeDependencies()
  +Widget build()
}

"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" o-- "flutter::src::animation::tween.dart::Animatable<double>"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" o-- "flutter::src::animation::tween.dart::ColorTween"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState" o-- "flutter::src::animation::animation.dart::Animation<Color>"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "calendar_feature::shift_scheduler::widgets::expansion_tile.dart::_ExpansionTileState"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::CustomBottomSheet" {
  +AnimationController? animationController
  +void Function()? onClosing
  +Widget Function(BuildContext)? builder
  +_CustomBottomSheetState createState()
  {static} +AnimationController createAnimationController()
}

"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::CustomBottomSheet" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::CustomBottomSheet" o-- "dart::ui::void Function()"
"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::CustomBottomSheet" o-- "flutter::src::widgets::framework.dart::Widget Function(BuildContext)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::CustomBottomSheet"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_CustomBottomSheetState" {
  -GlobalKey<State<StatefulWidget>> _childKey
  -double? _childHeight
  -bool _dismissUnderway
  -void _handleDragUpdate()
  -void _handleDragEnd()
  +Widget build()
}

"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_CustomBottomSheetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_CustomBottomSheetState"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheetLayout" {
  +double bottomInset
  +double progress
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"flutter::src::rendering::shifted_box.dart::SingleChildLayoutDelegate" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheetLayout"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute" {
  +Widget Function(BuildContext)? builder
  +Color? color
  +bool? autoResize
  +bool? dismissOnTap
  +String? barrierLabel
  +AnimationController? animationController
  +Duration transitionDuration
  +Color barrierColor
  +bool barrierDismissible
  +bool opaque
  +bool maintainState
  +AnimationController createAnimationController()
  +Widget buildPage()
}

"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute" o-- "flutter::src::widgets::framework.dart::Widget Function(BuildContext)"
"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute" o-- "dart::ui::Color"
"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"flutter::src::widgets::routes.dart::PopupRoute" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheet" {
  +_RoundedCornerModalRoute<T>? route
  +_RoundedModalBottomSheetState<T> createState()
}

"calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheet" o-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedCornerModalRoute<T>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheet"

class "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheetState" {
  +void initState()
  +void dispose()
  -void _handleChange()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::bottom_sheet.dart::_RoundedModalBottomSheetState"

class "calendar_feature::shift_scheduler::widgets::custom_button.dart::CustomDirectionalButtons" {
  +double? minValue
  +double? maxValue
  +double? initialValue
  +void Function(double)? onChanged
  +double? step
  +bool? horizontal
  +bool? loop
  +TextStyle? style
  +double? padding
  +Color? iconColor
  +bool? needNull
  +State<StatefulWidget> createState()
}

"calendar_feature::shift_scheduler::widgets::custom_button.dart::CustomDirectionalButtons" o-- "flutter::src::foundation::basic_types.dart::void Function(double)"
"calendar_feature::shift_scheduler::widgets::custom_button.dart::CustomDirectionalButtons" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::shift_scheduler::widgets::custom_button.dart::CustomDirectionalButtons" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::shift_scheduler::widgets::custom_button.dart::CustomDirectionalButtons"

class "calendar_feature::shift_scheduler::widgets::custom_button.dart::_CustomButton" {
  -double _counter
  +void initState()
  -void _count()
  -Widget _getCount()
  -Widget _buildCustomButton()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::shift_scheduler::widgets::custom_button.dart::_CustomButton"

class "calendar_feature::shift_scheduler::widgets::custom_button.dart::_CountDirection" {
  +int index
  {static} +List<_CountDirection> values
  {static} +_CountDirection Up
  {static} +_CountDirection Down
}

"calendar_feature::shift_scheduler::widgets::custom_button.dart::_CountDirection" o-- "calendar_feature::shift_scheduler::widgets::custom_button.dart::_CountDirection"
"dart::core::Enum" <|-- "calendar_feature::shift_scheduler::widgets::custom_button.dart::_CountDirection"

class "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings" {
  +bool allowNavigation
  +bool allowScroll
  +bool showTimeIndicator
  +TextStyle? timeIndicatorStyle
  +String indicatorTimeFormat
  +Duration autoNavigateDelay
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"

class "calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle" {
  +TextStyle? textStyle
  +TextAlign textAlign
  +Color? backgroundColor
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle" o-- "dart::ui::TextAlign"
"calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle" o-- "dart::ui::Color"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle"

class "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings" {
  +MonthHeaderSettings monthHeaderSettings
  +WeekHeaderSettings weekHeaderSettings
  +DayHeaderSettings dayHeaderSettings
  +TextStyle? appointmentTextStyle
  +TextStyle placeholderTextStyle
  +double appointmentItemHeight
  +bool hideEmptyScheduleWeek
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::DayHeaderSettings"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"

class "calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings" {
  +String monthFormat
  +double height
  +TextAlign textAlign
  +Color backgroundColor
  +TextStyle? monthTextStyle
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings" o-- "dart::ui::TextAlign"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings" o-- "dart::ui::Color"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::MonthHeaderSettings"

class "calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings" {
  +String? startDateFormat
  +String? endDateFormat
  +double height
  +TextAlign textAlign
  +Color backgroundColor
  +TextStyle? weekTextStyle
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings" o-- "dart::ui::TextAlign"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings" o-- "dart::ui::Color"
"calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::WeekHeaderSettings"

class "calendar_feature::src::calendar::settings::schedule_view_settings.dart::DayHeaderSettings" {
  +String dayFormat
  +double width
  +TextStyle? dayTextStyle
  +TextStyle? dateTextStyle
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::schedule_view_settings.dart::DayHeaderSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::DayHeaderSettings"

class "calendar_feature::src::calendar::settings::time_region.dart::TimeRegion" {
  +DateTime startTime
  +DateTime endTime
  +String? text
  +String? recurrenceRule
  +Color? color
  +bool enablePointerInteraction
  +String? timeZone
  +TextStyle? textStyle
  +IconData? iconData
  +List<DateTime>? recurrenceExceptionDates
  +List<Object>? resourceIds
  +int hashCode
  +TimeRegion copyWith()
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::time_region.dart::TimeRegion" o-- "dart::ui::Color"
"calendar_feature::src::calendar::settings::time_region.dart::TimeRegion" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::settings::time_region.dart::TimeRegion" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::time_region.dart::TimeRegion"

class "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings" {
  +int visibleResourceCount
  +TextStyle? displayNameTextStyle
  +double size
  +bool showAvatar
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings"

class "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle" {
  +Color? backgroundColor
  +TextStyle? textStyle
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle" o-- "dart::ui::Color"
"calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"

class "calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle" {
  +Color? backgroundColor
  +TextStyle? dateTextStyle
  +TextStyle? dayTextStyle
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle" o-- "dart::ui::Color"
"calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle"

class "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings" {
  +String dayFormat
  +double agendaItemHeight
  +bool showTrailingAndLeadingDates
  +MonthCellStyle monthCellStyle
  +AgendaStyle agendaStyle
  +int numberOfWeeksInView
  +int appointmentDisplayCount
  +MonthAppointmentDisplayMode appointmentDisplayMode
  +bool showAgenda
  +double agendaViewHeight
  +MonthNavigationDirection navigationDirection
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle"
"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::AgendaStyle"
"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings" o-- "calendar_feature::src::calendar::common::enums.dart::MonthAppointmentDisplayMode"
"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings" o-- "calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"

class "calendar_feature::src::calendar::settings::month_view_settings.dart::AgendaStyle" {
  +TextStyle? appointmentTextStyle
  +TextStyle placeholderTextStyle
  +TextStyle? dayTextStyle
  +TextStyle? dateTextStyle
  +Color? backgroundColor
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::month_view_settings.dart::AgendaStyle" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::settings::month_view_settings.dart::AgendaStyle" o-- "dart::ui::Color"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::month_view_settings.dart::AgendaStyle"

class "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle" {
  +TextStyle? textStyle
  +TextStyle? todayTextStyle
  +TextStyle? trailingDatesTextStyle
  +TextStyle? leadingDatesTextStyle
  +Color? backgroundColor
  +Color? todayBackgroundColor
  +Color? trailingDatesBackgroundColor
  +Color? leadingDatesBackgroundColor
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle" o-- "dart::ui::Color"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle"

class "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings" {
  +double startHour
  +double endHour
  +List<int> nonWorkingDays
  +Duration timeInterval
  +double timeIntervalHeight
  +double timeIntervalWidth
  +String timeFormat
  +double timelineAppointmentHeight
  +Duration? minimumAppointmentDuration
  +String dateFormat
  +String dayFormat
  +double timeRulerSize
  +TextStyle? timeTextStyle
  +Color? allDayPanelColor
  +int numberOfDaysInView
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings" o-- "dart::ui::Color"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"

class "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" {
  +SfCalendar calendar
  +CalendarView view
  +List<DateTime> visibleDates
  +List<CalendarAppointment>? visibleAppointments
  +ValueNotifier<SelectionDetails?> repaintNotifier
  +void Function(UpdateCalendarStateDetails) updateCalendarState
  +double timeLabelWidth
  +double allDayPainterHeight
  +bool isRTL
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<Offset?> allDayHoverPosition
  +double textScaleFactor
  +bool isMobilePlatform
  +double height
  +double width
  +bool isExpandable
  +bool isExpanding
  +SfLocalizations localizations
  +_AllDayAppointmentLayoutState createState()
}

"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<SelectionDetails>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::void Function(UpdateCalendarStateDetails)"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::AllDayAppointmentLayout"

class "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentLayoutState" {
  -UpdateCalendarStateDetails _updateCalendarStateDetails
  -Map<int, List<AppointmentView>> _indexAppointments
  -Map<int, int> _moreAppointmentIndex
  -List<AppointmentView> _appointmentCollection
  -List<Widget> _children
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  -void _updateAppointmentDetails()
}

"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentLayoutState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentLayoutState"

class "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" {
  +SfCalendar calendar
  +CalendarView view
  +List<DateTime> visibleDates
  +List<CalendarAppointment>? visibleAppointments
  +ValueNotifier<SelectionDetails?> repaintNotifier
  +double timeLabelWidth
  +double allDayPainterHeight
  +bool isRTL
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<Offset?> allDayHoverPosition
  +double textScaleFactor
  +bool isMobilePlatform
  +double height
  +double width
  +bool isExpandable
  +bool isExpanding
  +SfLocalizations localizations
  +Map<int, int> moreAppointmentIndex
  +List<AppointmentView> appointmentCollection
  +_AllDayAppointmentRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<SelectionDetails>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderWidget"

class "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" {
  +SfCalendar calendar
  +bool isMobilePlatform
  +bool isExpanding
  +Map<int, int> moreAppointmentIndex
  +List<AppointmentView> appointmentCollection
  -double _width
  -double _height
  -double _allDayPainterHeight
  -CalendarView _view
  -double _timeLabelWidth
  -SfLocalizations _localizations
  -bool _isExpandable
  -double _textScaleFactor
  -List<CalendarAppointment>? _visibleAppointments
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -List<DateTime> _visibleDates
  -bool _isRTL
  -ValueNotifier<Offset?> _allDayHoverPosition
  -ValueNotifier<SelectionDetails?> _selectionNotifier
  -List<SemanticsNode>? _cacheNodes
  -Paint _rectPainter
  -TextPainter _textPainter
  -TextPainter _expanderTextPainter
  -BoxPainter _boxPainter
  -bool _isHoveringAppointment
  -int _maxPosition
  -double _cellWidth
  +double width
  +double height
  +double allDayPainterHeight
  +CalendarView view
  +double timeLabelWidth
  +SfLocalizations localizations
  +bool isExpandable
  +double textScaleFactor
  +List<CalendarAppointment>? visibleAppointments
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +List<DateTime> visibleDates
  +bool isRTL
  +ValueNotifier<Offset?> allDayHoverPosition
  +ValueNotifier<SelectionDetails?> selectionNotifier
  +void attach()
  +bool hitTestSelf()
  +bool hitTestChildren()
  +void detach()
  +void performLayout()
  +void paint()
  -String _getAllDayAppointmentText()
  -double _getTextSize()
  -void _addForwardSpanIconForAllDay()
  -void _drawAllDayAppointmentView()
  -void _addBackwardSpanIconForAllDay()
  -void _addExpanderText()
  -void _addExpandOrCollapseIcon()
  -void _addMouseHoveringForAllDayPanel()
  -void _addSelectionForAllDayPanel()
  -void _updateSelectionDecorationPainter()
  -void _addSelectionForAppointment()
  -void _addMouseHoveringForAppointment()
  -void _addRecurrenceIcon()
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<SelectionDetails>"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject" o-- "flutter::src::painting::decoration.dart::BoxPainter"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::appointment_layout::allday_appointment_layout.dart::_AllDayAppointmentRenderObject"

class "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" {
  +SfCalendar calendar
  +CalendarView view
  +List<DateTime> visibleDates
  +double timeIntervalHeight
  +void Function(UpdateCalendarStateDetails) updateCalendarState
  +bool isRTL
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<Offset?> appointmentHoverPosition
  +List<CalendarResource>? resourceCollection
  +double? resourceItemHeight
  +double textScaleFactor
  +bool isMobilePlatform
  +double width
  +double height
  +SfLocalizations localizations
  +ValueNotifier<List<CalendarAppointment>?> visibleAppointments
  +AppointmentView? getAppointmentViewOnPoint()
  +List<AppointmentView> getAppointmentViewCollection()
  +_AppointmentLayoutState createState()
}

"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::void Function(UpdateCalendarStateDetails)"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<CalendarAppointment>>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout"

class "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentLayoutState" {
  -List<AppointmentView> _appointmentCollection
  -Map<int, List<AppointmentView>> _indexAppointments
  -Map<int, RRect> _monthAppointmentCountViews
  -List<Widget> _children
  -UpdateCalendarStateDetails _updateCalendarStateDetails
  -TextPainter _textPainter
  -double _weekNumberPanelWidth
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
  -AppointmentView? _getAppointmentViewOnPoint()
  -void _updateVisibleAppointment()
  -List<CalendarAppointment> _getValidAppointments()
  -void _updateAppointmentDetails()
  -void _updateMonthAppointmentDetails()
  -void _updateDayAppointmentDetails()
  -void _updateTimelineMonthAppointmentDetails()
  -void _updateTimelineAppointmentDetails()
  -double _getTimelineAppointmentHeight()
}

"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentLayoutState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentLayoutState" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentLayoutState"

class "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" {
  +SfCalendar calendar
  +double weekNumberPanelWidth
  +CalendarView view
  +List<DateTime> visibleDates
  +double timeIntervalHeight
  +bool isRTL
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<Offset?> appointmentHoverPosition
  +List<CalendarResource>? resourceCollection
  +double? resourceItemHeight
  +double textScaleFactor
  +bool isMobilePlatform
  +double width
  +double height
  +SfLocalizations localizations
  +List<CalendarAppointment>? visibleAppointments
  +List<AppointmentView> appointmentCollection
  +Map<int, List<AppointmentView>> indexAppointments
  +Map<int, RRect> monthAppointmentCountViews
  +_AppointmentRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderWidget"

class "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" {
  -List<CalendarAppointment>? _visibleAppointments
  -ValueNotifier<Offset?> _appointmentHoverPosition
  -double _weekNumberPanelWidth
  -double _timeIntervalHeight
  -double _width
  -double _height
  -SfLocalizations _localizations
  -double _textScaleFactor
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -List<DateTime> _visibleDates
  -bool _isRTL
  -double? _resourceItemHeight
  -List<CalendarResource>? _resourceCollection
  -CalendarView _view
  -SfCalendar _calendar
  +bool isMobilePlatform
  +List<AppointmentView> appointmentCollection
  +Map<int, List<AppointmentView>> indexAppointments
  +Map<int, RRect> monthAppointmentCountViews
  -Paint _appointmentPainter
  -TextPainter _textPainter
  +List<CalendarAppointment>? visibleAppointments
  +ValueNotifier<Offset?> appointmentHoverPosition
  +double weekNumberPanelWidth
  +double timeIntervalHeight
  +double width
  +double height
  +SfLocalizations localizations
  +double textScaleFactor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +List<DateTime> visibleDates
  +bool isRTL
  +double? resourceItemHeight
  +List<CalendarResource>? resourceCollection
  +CalendarView view
  +SfCalendar calendar
  +bool isRepaintBoundary
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void attach()
  +void detach()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
  +bool hitTestChildren()
  +void performLayout()
  +void paint()
  -void _drawCustomAppointmentView()
  -void _drawMonthAppointment()
  -void _drawMonthAppointmentView()
  -void _drawSingleLineAppointmentView()
  -void _drawForwardSpanIconForMonth()
  -void _drawBackwardSpanIconForMonth()
  -void _drawRecurrenceIconForMonth()
  -void _drawMonthAppointmentIndicator()
  -List<CalendarAppointment> _getSpecificDateVisibleAppointment()
  -void _updateAppointmentHovering()
  -void _drawDayAppointments()
  -void _addBackwardSpanIconForDay()
  -double _getXPositionForSpanIconForDay()
  -void _addForwardSpanIconForDay()
  -void _updatePainterMaxLines()
  -void _addRecurrenceIconForDay()
  -void _drawTimelineAppointments()
  -String _getTimelineAppointmentText()
  -double _getTextSize()
  -double _getYPositionForSpanIconInTimeline()
  -void _addForwardSpanIconForTimeline()
  -void _addBackwardSpanIconForTimeline()
  -void _addRecurrenceIconForTimeline()
}

"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject" o-- "null::List<CustomPainterSemantics> Function(Size)"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::_AppointmentRenderObject"

class "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" {
  +MonthViewSettings? monthViewSettings
  +ScheduleViewSettings? scheduleViewSettings
  +DateTime? selectedDate
  +List<CalendarAppointment>? appointments
  +bool isRTL
  +String locale
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<ScheduleViewHoveringDetails?> agendaViewNotifier
  +SfLocalizations localizations
  +double timeLabelWidth
  +String? appointmentTimeTextFormat
  +Widget Function(BuildContext, CalendarAppointmentDetails)? appointmentBuilder
  +double textScaleFactor
  +bool isMobilePlatform
  +double width
  +double height
  +SfCalendar calendar
  +TextStyle placeholderTextStyle
  +_AgendaViewLayoutState createState()
}

"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, CalendarAppointmentDetails)"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::AgendaViewLayout"

class "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewLayoutState" {
  -List<AppointmentView> _appointmentCollection
  -List<Widget> _children
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  -void _updateAppointmentDetails()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewLayoutState"

class "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" {
  +MonthViewSettings? monthViewSettings
  +ScheduleViewSettings? scheduleViewSettings
  +DateTime? selectedDate
  +List<CalendarAppointment>? appointments
  +bool isRTL
  +String locale
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<ScheduleViewHoveringDetails?> agendaViewNotifier
  +SfLocalizations localizations
  +double timeLabelWidth
  +String? appointmentTimeTextFormat
  +double textScaleFactor
  +bool isMobilePlatform
  +List<AppointmentView> appointmentCollection
  +double width
  +double height
  +TextStyle placeholderTextStyle
  +_AgendaViewRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderWidget"

class "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" {
  +bool isMobilePlatform
  -double _height
  -TextStyle _placeholderTextStyle
  -double _width
  -double _textScaleFactor
  -MonthViewSettings? _monthViewSettings
  -ScheduleViewSettings? _scheduleViewSettings
  -String _locale
  -SfLocalizations _localizations
  -String? _appointmentTimeTextFormat
  -double _timeLabelWidth
  -DateTime? _selectedDate
  -List<CalendarAppointment>? _appointments
  -List<AppointmentView> _appointmentCollection
  -bool _isRTL
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -ValueNotifier<ScheduleViewHoveringDetails?> _agendaViewNotifier
  -List<SemanticsNode>? _cacheNodes
  -Paint _rectPainter
  -TextPainter _textPainter
  +double height
  +TextStyle placeholderTextStyle
  +double width
  +double textScaleFactor
  +MonthViewSettings? monthViewSettings
  +ScheduleViewSettings? scheduleViewSettings
  +String locale
  +SfLocalizations localizations
  +String? appointmentTimeTextFormat
  +double timeLabelWidth
  +DateTime? selectedDate
  +List<CalendarAppointment>? appointments
  +List<AppointmentView> appointmentCollection
  +bool isRTL
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<ScheduleViewHoveringDetails?> agendaViewNotifier
  +void attach()
  +void detach()
  +bool hitTestChildren()
  +void performLayout()
  +void paint()
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
  -void _drawDefaultUI()
  -double _getTextSize()
  -double _drawIcon()
  -double _updatePainterLinesCount()
  -double _drawNormalAppointmentUI()
  -List<double> _drawSpanningAppointmentForScheduleView()
  -void _drawDefaultView()
  -void _updateTextPainterProperties()
  -double _addScheduleViewForWeb()
  -void _addMouseHovering()
}

"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::appointment_layout::agenda_view_layout.dart::_AgendaViewRenderObject"

class "calendar_feature::src::calendar::common::event_args.dart::ViewChangedDetails" {
  +List<DateTime> visibleDates
}

class "calendar_feature::src::calendar::common::event_args.dart::CalendarTapDetails" {
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" <|-- "calendar_feature::src::calendar::common::event_args.dart::CalendarTapDetails"

class "calendar_feature::src::calendar::common::event_args.dart::CalendarLongPressDetails" {
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" <|-- "calendar_feature::src::calendar::common::event_args.dart::CalendarLongPressDetails"

class "calendar_feature::src::calendar::common::event_args.dart::CalendarSelectionDetails" {
  +DateTime? date
  +CalendarResource? resource
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarSelectionDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" {
  +List<dynamic>? appointments
  +DateTime? date
  +CalendarElement targetElement
  +CalendarResource? resource
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarElement"
"calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeStartDetails" {
  +dynamic appointment
  +CalendarResource? resource
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeStartDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeUpdateDetails" {
  +dynamic appointment
  +CalendarResource? resource
  +DateTime? resizingTime
  +Offset? resizingOffset
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeUpdateDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"
"calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeUpdateDetails" o-- "dart::ui::Offset"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeEndDetails" {
  +dynamic appointment
  +CalendarResource? resource
  +DateTime? startTime
  +DateTime? endTime
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentResizeEndDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentDragStartDetails" {
  +Object? appointment
  +CalendarResource? resource
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentDragStartDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentDragUpdateDetails" {
  +Object? appointment
  +CalendarResource? sourceResource
  +CalendarResource? targetResource
  +Offset? draggingPosition
  +DateTime? draggingTime
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentDragUpdateDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"
"calendar_feature::src::calendar::common::event_args.dart::AppointmentDragUpdateDetails" o-- "dart::ui::Offset"

class "calendar_feature::src::calendar::common::event_args.dart::AppointmentDragEndDetails" {
  +Object? appointment
  +CalendarResource? sourceResource
  +CalendarResource? targetResource
  +DateTime? droppingTime
}

"calendar_feature::src::calendar::common::event_args.dart::AppointmentDragEndDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::common::event_args.dart::CalendarDetails" {
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarTouchDetails" <|-- "calendar_feature::src::calendar::common::event_args.dart::CalendarDetails"

class "calendar_feature::src::calendar::common::event_args.dart::MonthCellDetails" {
  +DateTime date
  +List<Object> appointments
  +List<DateTime> visibleDates
  +Rect bounds
}

"calendar_feature::src::calendar::common::event_args.dart::MonthCellDetails" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::event_args.dart::ScheduleViewMonthHeaderDetails" {
  +DateTime date
  +Rect bounds
}

"calendar_feature::src::calendar::common::event_args.dart::ScheduleViewMonthHeaderDetails" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::event_args.dart::CalendarAppointmentDetails" {
  +DateTime date
  +Rect bounds
  +Iterable<dynamic> appointments
  +bool isMoreAppointmentRegion
}

"calendar_feature::src::calendar::common::event_args.dart::CalendarAppointmentDetails" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::event_args.dart::TimeRegionDetails" {
  +TimeRegion region
  +DateTime date
  +Rect bounds
}

"calendar_feature::src::calendar::common::event_args.dart::TimeRegionDetails" o-- "calendar_feature::src::calendar::settings::time_region.dart::TimeRegion"
"calendar_feature::src::calendar::common::event_args.dart::TimeRegionDetails" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::event_args.dart::ResourceViewHeaderDetails" {
  +CalendarResource resource
  +Rect bounds
}

"calendar_feature::src::calendar::common::event_args.dart::ResourceViewHeaderDetails" o-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"
"calendar_feature::src::calendar::common::event_args.dart::ResourceViewHeaderDetails" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::date_time_engine.dart::DateTimeHelper" {
  {static} +int getViewDatesCount()
  {static} +List<DateTime> getCurrentMonthDates()
  {static} +DateTime getNextViewStartDate()
  {static} +DateTime getPreviousViewStartDate()
  {static} -DateTime _getPreviousValidDate()
  {static} -DateTime _getNextValidDate()
  {static} +int getIndex()
  {static} +int getVisibleDateIndex()
  {static} +bool canMoveToPreviousView()
  {static} +bool canMoveToNextView()
  {static} +DateTime getDateTimeValue()
  {static} +int getWeekNumberOfYear()
  {static} +int getWeeksInYear()
}

class "calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection" {
  +int index
  {static} +List<MonthNavigationDirection> values
  {static} +MonthNavigationDirection vertical
  {static} +MonthNavigationDirection horizontal
}

"calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection" o-- "calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection"

class "calendar_feature::src::calendar::common::enums.dart::CalendarView" {
  +int index
  {static} +List<CalendarView> values
  {static} +CalendarView day
  {static} +CalendarView week
  {static} +CalendarView workWeek
  {static} +CalendarView month
  {static} +CalendarView timelineDay
  {static} +CalendarView timelineWeek
  {static} +CalendarView timelineWorkWeek
  {static} +CalendarView timelineMonth
  {static} +CalendarView schedule
}

"calendar_feature::src::calendar::common::enums.dart::CalendarView" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"

class "calendar_feature::src::calendar::common::enums.dart::MonthAppointmentDisplayMode" {
  +int index
  {static} +List<MonthAppointmentDisplayMode> values
  {static} +MonthAppointmentDisplayMode indicator
  {static} +MonthAppointmentDisplayMode appointment
  {static} +MonthAppointmentDisplayMode none
}

"calendar_feature::src::calendar::common::enums.dart::MonthAppointmentDisplayMode" o-- "calendar_feature::src::calendar::common::enums.dart::MonthAppointmentDisplayMode"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::MonthAppointmentDisplayMode"

class "calendar_feature::src::calendar::common::enums.dart::RecurrenceType" {
  +int index
  {static} +List<RecurrenceType> values
  {static} +RecurrenceType daily
  {static} +RecurrenceType weekly
  {static} +RecurrenceType monthly
  {static} +RecurrenceType yearly
}

"calendar_feature::src::calendar::common::enums.dart::RecurrenceType" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"

class "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange" {
  +int index
  {static} +List<RecurrenceRange> values
  {static} +RecurrenceRange endDate
  {static} +RecurrenceRange noEndDate
  {static} +RecurrenceRange count
}

"calendar_feature::src::calendar::common::enums.dart::RecurrenceRange" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"

class "calendar_feature::src::calendar::common::enums.dart::WeekDays" {
  +int index
  {static} +List<WeekDays> values
  {static} +WeekDays sunday
  {static} +WeekDays monday
  {static} +WeekDays tuesday
  {static} +WeekDays wednesday
  {static} +WeekDays thursday
  {static} +WeekDays friday
  {static} +WeekDays saturday
}

"calendar_feature::src::calendar::common::enums.dart::WeekDays" o-- "calendar_feature::src::calendar::common::enums.dart::WeekDays"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::WeekDays"

class "calendar_feature::src::calendar::common::enums.dart::CalendarElement" {
  +int index
  {static} +List<CalendarElement> values
  {static} +CalendarElement header
  {static} +CalendarElement viewHeader
  {static} +CalendarElement calendarCell
  {static} +CalendarElement appointment
  {static} +CalendarElement agenda
  {static} +CalendarElement allDayPanel
  {static} +CalendarElement moreAppointmentRegion
  {static} +CalendarElement resourceHeader
}

"calendar_feature::src::calendar::common::enums.dart::CalendarElement" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarElement"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::CalendarElement"

class "calendar_feature::src::calendar::common::enums.dart::CalendarDataSourceAction" {
  +int index
  {static} +List<CalendarDataSourceAction> values
  {static} +CalendarDataSourceAction add
  {static} +CalendarDataSourceAction remove
  {static} +CalendarDataSourceAction reset
  {static} +CalendarDataSourceAction addResource
  {static} +CalendarDataSourceAction removeResource
  {static} +CalendarDataSourceAction resetResource
}

"calendar_feature::src::calendar::common::enums.dart::CalendarDataSourceAction" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarDataSourceAction"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::CalendarDataSourceAction"

class "calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode" {
  +int index
  {static} +List<ViewNavigationMode> values
  {static} +ViewNavigationMode snap
  {static} +ViewNavigationMode none
}

"calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode" o-- "calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode"

class "calendar_feature::src::calendar::common::enums.dart::AppointmentType" {
  +int index
  {static} +List<AppointmentType> values
  {static} +AppointmentType changedOccurrence
  {static} +AppointmentType normal
  {static} +AppointmentType occurrence
  {static} +AppointmentType pattern
}

"calendar_feature::src::calendar::common::enums.dart::AppointmentType" o-- "calendar_feature::src::calendar::common::enums.dart::AppointmentType"
"dart::core::Enum" <|-- "calendar_feature::src::calendar::common::enums.dart::AppointmentType"

class "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarValueChangedNotifier" {
  -List<void Function(String)>? _listeners
  +void addPropertyChangedListener()
  +void removePropertyChangedListener()
  +void notifyPropertyChangedListeners()
  +void dispose()
}

"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarValueChangedNotifier"

class "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController" {
  -DateTime? _selectedDate
  -DateTime? _displayDate
  -CalendarView? _view
  +void Function()? forward
  +CalendarDetails? Function(Offset)? getCalendarDetailsAtOffset
  +void Function()? backward
  +DateTime? selectedDate
  +DateTime? displayDate
  +CalendarView? view
  +void debugFillProperties()
}

"calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController" o-- "dart::ui::void Function()"
"calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarDetails Function(Offset)"
"calendar_feature::src::calendar::common::calendar_controller.dart::CalendarValueChangedNotifier" <|-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarViewHelper" {
  {static} +bool isRTLLayout()
  {static} +bool isMobileLayoutUI()
  {static} +bool isMobileLayout()
  {static} +bool isEmptyList()
  {static} +bool isCurrentMonthDate()
  {static} +bool isLeadingAndTrailingDatesVisible()
  {static} +bool isDateCollectionEqual()
  {static} +List<T>? cloneList()
  {static} +bool isCollectionEqual()
  {static} +bool isDateInDateCollection()
  {static} +double getScheduleAppointmentHeight()
  {static} +double getScheduleAllDayAppointmentHeight()
  {static} +double getResourceItemHeight()
  {static} +bool isResourceEnabled()
  {static} +String getAppointmentSemanticsText()
  {static} +Color? getTodayHighlightTextColor()
  {static} +double getTimeToPosition()
  {static} +int getTimeInterval()
  {static} +double getHorizontalLinesCount()
  {static} -int _getNearestValue()
  {static} +bool isSameTimeSlot()
  {static} +double getTimeLabelWidth()
  {static} +double getViewHeaderHeight()
  {static} +bool isDayView()
  {static} +double getCellEndPadding()
  {static} +bool shouldRaiseViewChangedCallback()
  {static} +bool shouldRaiseCalendarTapCallback()
  {static} +bool shouldRaiseCalendarLongPressCallback()
  {static} +bool shouldRaiseCalendarSelectionChangedCallback()
  {static} +bool shouldRaiseAppointmentResizeStartCallback()
  {static} +bool shouldRaiseAppointmentResizeUpdateCallback()
  {static} +bool shouldRaiseAppointmentResizeEndCallback()
  {static} +void raiseCalendarTapCallback()
  {static} +void raiseCalendarLongPressCallback()
  {static} +void raiseCalendarSelectionChangedCallback()
  {static} +void raiseViewChangedCallback()
  {static} +void raiseAppointmentResizeStartCallback()
  {static} +void raiseAppointmentResizeUpdateCallback()
  {static} +void raiseAppointmentResizeEndCallback()
  {static} +bool isTimelineView()
  {static} +List<dynamic> getCustomAppointments()
  {static} +dynamic getAppointmentDetail()
  {static} +int getResourceIndex()
  {static} +bool isDateTimeWithInDateTimeRange()
  {static} +bool isSameOrBeforeDateTime()
  {static} +bool isSameOrAfterDateTime()
  {static} +KeyEventResult handleViewSwitchKeyBoardEvent()
  {static} +double getWeekNumberPanelWidth()
  {static} +bool isDraggingAppointmentHasDisabledCell()
}

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails" {
  +DateTime? currentDate
  +List<DateTime> currentViewVisibleDates
  +List<CalendarAppointment> visibleAppointments
  +DateTime? selectedDate
  +double allDayPanelHeight
  +List<AppointmentView> allDayAppointmentViewCollection
  +List<CalendarAppointment> appointments
}

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::TimeRegionView" {
  +int visibleIndex
  +CalendarTimeRegion region
  +Rect bound
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::TimeRegionView" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::TimeRegionView" o-- "dart::ui::Rect"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView" {
  +bool canReuse
  +int startIndex
  +int endIndex
  +CalendarAppointment? appointment
  +int position
  +int maxPositions
  +bool isSpanned
  +RRect? appointmentRect
  +int resourceIndex
  +AppointmentView clone()
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarAppointment"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView" o-- "dart::ui::RRect"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarAppointment" {
  +DateTime startTime
  +DateTime endTime
  +bool isAllDay
  +String subject
  +Color color
  +String? startTimeZone
  +String? endTimeZone
  +String? recurrenceRule
  +List<DateTime>? recurrenceExceptionDates
  +String? notes
  +String? location
  +List<Object>? resourceIds
  +Object? recurrenceId
  +Object? id
  +Object? data
  +DateTime actualStartTime
  +DateTime actualEndTime
  +bool isSpanned
  +DateTime exactStartTime
  +DateTime exactEndTime
  +int hashCode
  +Appointment convertToCalendarAppointment()
  +bool ==()
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarAppointment" o-- "dart::ui::Color"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion" {
  +DateTime startTime
  +DateTime endTime
  +String? text
  +String? recurrenceRule
  +Color? color
  +bool enablePointerInteraction
  +String? timeZone
  +TextStyle? textStyle
  +IconData? iconData
  +List<DateTime>? recurrenceExceptionDates
  +List<Object>? resourceIds
  +TimeRegion data
  +DateTime actualStartTime
  +DateTime actualEndTime
  +int hashCode
  +CalendarTimeRegion copyWith()
  +bool ==()
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion" o-- "dart::ui::Color"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion" o-- "flutter::src::widgets::icon_data.dart::IconData"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarTimeRegion" o-- "calendar_feature::src::calendar::settings::time_region.dart::TimeRegion"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::ScheduleViewHoveringDetails" {
  +DateTime hoveringDate
  +Offset hoveringOffset
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::ScheduleViewHoveringDetails" o-- "dart::ui::Offset"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::SelectionDetails" {
  +AppointmentView? appointmentView
  +DateTime? selectedDate
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::SelectionDetails" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"

class "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarParentData" {
}

"flutter::src::rendering::box.dart::ContainerBoxParentData" <|-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::CalendarParentData"

abstract class "calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" {
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  +void setupParentData()
  +bool hitTestSelf()
  +void visitChildrenForSemantics()
}

"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::box.dart::RenderBox" <|-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject"
"flutter::src::rendering::object.dart::ContainerRenderObjectMixin" <|-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject"

class "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" {
  +Widget Function(BuildContext, dynamic Function())? loadMoreWidgetBuilder
  +List<CalendarView>? allowedViews
  +bool allowViewNavigation
  +bool showDatePickerButton
  +bool showTodayButton
  +bool showCurrentTimeIndicator
  +CalendarView view
  +DateTime minDate
  +DateTime maxDate
  +Widget Function(BuildContext, MonthCellDetails)? monthCellBuilder
  +Widget Function(BuildContext, CalendarAppointmentDetails)? appointmentBuilder
  +Widget Function(BuildContext, TimeRegionDetails)? timeRegionBuilder
  +String? headerDateFormat
  +Widget Function(BuildContext, ScheduleViewMonthHeaderDetails)? scheduleViewMonthHeaderBuilder
  +int firstDayOfWeek
  +String? appointmentTimeTextFormat
  +Color? cellBorderColor
  +ScheduleViewSettings scheduleViewSettings
  +CalendarHeaderStyle headerStyle
  +ViewHeaderStyle viewHeaderStyle
  +double headerHeight
  +double cellEndPadding
  +TextStyle appointmentTextStyle
  +double viewHeaderHeight
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +Color? backgroundColor
  +bool showNavigationArrow
  +ViewNavigationMode viewNavigationMode
  +TimeSlotViewSettings timeSlotViewSettings
  +ResourceViewSettings resourceViewSettings
  +MonthViewSettings monthViewSettings
  +List<DateTime>? blackoutDates
  +TextStyle? blackoutDatesTextStyle
  +Decoration? selectionDecoration
  +DateTime initialDisplayDate
  +String? timeZone
  +DateTime? initialSelectedDate
  +void Function(ViewChangedDetails)? onViewChanged
  +void Function(CalendarTapDetails)? onTap
  +void Function(CalendarLongPressDetails)? onLongPress
  +void Function(CalendarSelectionDetails)? onSelectionChanged
  +CalendarDataSource<Object?>? dataSource
  +List<TimeRegion>? specialRegions
  +bool showWeekNumber
  +WeekNumberStyle weekNumberStyle
  +Widget Function(BuildContext, ResourceViewHeaderDetails)? resourceViewHeaderBuilder
  +bool allowDragAndDrop
  +DragAndDropSettings dragAndDropSettings
  +void Function(AppointmentDragStartDetails)? onDragStart
  +void Function(AppointmentDragUpdateDetails)? onDragUpdate
  +void Function(AppointmentDragEndDetails)? onDragEnd
  +CalendarController? controller
  +bool allowAppointmentResize
  +void Function(AppointmentResizeStartDetails)? onAppointmentResizeStart
  +void Function(AppointmentResizeUpdateDetails)? onAppointmentResizeUpdate
  +void Function(AppointmentResizeEndDetails)? onAppointmentResizeEnd
  {static} +List<DateTime> getRecurrenceDateTimeCollection()
  {static} +RecurrenceProperties parseRRule()
  {static} +String generateRRule()
  +_SfCalendarState createState()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, dynamic Function())"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, MonthCellDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, CalendarAppointmentDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, TimeRegionDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, ScheduleViewMonthHeaderDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "dart::ui::Color"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::enums.dart::ViewNavigationMode"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "flutter::src::painting::decoration.dart::Decoration"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(ViewChangedDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(CalendarTapDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(CalendarLongPressDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(CalendarSelectionDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource<Object>"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, ResourceViewHeaderDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentDragStartDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentDragUpdateDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentDragEndDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentResizeStartDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentResizeUpdateDetails)"
"calendar_feature::src::calendar::sfcalendar.dart::SfCalendar" o-- "calendar_feature::src::calendar::common::event_args.dart::void Function(AppointmentResizeEndDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"

class "calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" {
  -List<DateTime> _currentViewVisibleDates
  -DateTime _currentDate
  -DateTime? _selectedDate
  -List<CalendarAppointment> _visibleAppointments
  -List<AppointmentView> _allDayAppointmentViewCollection
  -double _allDayPanelHeight
  -ScrollController? _agendaScrollController
  -ScrollController? _resourcePanelScrollController
  -ValueNotifier<DateTime?> _agendaSelectedDate
  -ValueNotifier<DateTime?> _timelineMonthWeekNumberNotifier
  -ValueNotifier<DateTime?> _headerUpdateNotifier
  -String _locale
  -SfLocalizations _localizations
  -double _minWidth
  -double _minHeight
  -double _textScaleFactor
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -ValueNotifier<Offset?> _headerHoverNotifier
  -ValueNotifier<Offset?> _resourceHoverNotifier
  -ValueNotifier<ScheduleViewHoveringDetails?> _agendaDateNotifier
  -ValueNotifier<ScheduleViewHoveringDetails?> _agendaViewNotifier
  -ValueNotifier<bool> _resourceImageNotifier
  -Key _scheduleViewKey
  -Key _scrollKey
  -GlobalKey<State<StatefulWidget>> _customScrollViewKey
  -List<DateTime> _previousDates
  -List<DateTime> _nextDates
  -Map<int, _ScheduleViewDetails> _forwardWidgetHeights
  -Map<int, _ScheduleViewDetails> _backwardWidgetHeights
  -DateTime? _minDate
  -DateTime? _maxDate
  -double _agendaDateViewWidth
  -bool _timeZoneLoaded
  -List<CalendarAppointment> _appointments
  -CalendarController _controller
  -double? _actualWidth
  -List<DateTime>? _blackoutDates
  -bool _isRTL
  -CalendarView _view
  -bool _showHeader
  -double _calendarViewWidth
  -ValueNotifier<bool> _viewChangeNotifier
  -DateTime _scheduleDisplayDate
  -bool _isMobilePlatform
  -bool _useMobilePlatformUI
  -AnimationController? _fadeInController
  -Animation<double>? _fadeIn
  -ValueNotifier<double> _opacity
  -bool _isLoadMoreLoaded
  -bool _isNeedLoadMore
  -bool _isScheduleStartLoadMore
  -DateTime? _scheduleMinDate
  -DateTime? _scheduleMaxDate
  -FocusNode _focusNode
  -List<CalendarResource>? _resourceCollection
  -Map<Object, DecorationImagePainter> _imagePainterCollection
  -bool _canScrollTimeSlotView
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +Widget build()
  -CalendarDetails? _getCalendarDetails()
  -CalendarDetails? _getScheduleViewDetails()
  +void dispose()
  -SfCalendarThemeData _getThemeDataValue()
  -void _updateFadeAnimation()
  -dynamic _loadDataBase()
  -void _getAppointment()
  -void _updateVisibleAppointments()
  -void _updateViewHeaderHover()
  -void _initScheduleViewProperties()
  -void _handleScheduleViewScrolled()
  -void _updateSelectionChangedCallback()
  -void _calendarValueChangedListener()
  -void _updateDisplayDate()
  -void _updateCurrentVisibleDates()
  -void _dataSourceChangedListener()
  -void _loadScheduleViewAppointmentDates()
  -void _removeScheduleViewAppointmentDates()
  -void _disposeResourceImagePainter()
  -void _updateVisibleAppointmentCollection()
  -void _agendaSelectedDateListener()
  -DateTime _updateCurrentDate()
  -void _updateAppointmentView()
  -void _updateAppointmentViewPosition()
  -void _updateAppointmentPositionAndMaxPosition()
  -AppointmentView? _getAppointmentOnPosition()
  -void _updateIntersectAppointmentViewCollection()
  -void _updateAllDayAppointment()
  -void _updateAllDayPanelHeight()
  -double _getMonthAgendaHeight()
  -void _updateMouseHoveringForHeader()
  -void _updateMouseHoverPosition()
  -void _pointerEnterEvent()
  -void _pointerHoverEvent()
  -void _pointerExitEvent()
  -DateTime _getMaxAppointmentDate()
  -DateTime _getMinAppointmentDate()
  -bool _isAppointmentBetweenDates()
  -bool _isAllDayAppointmentView()
  -int _getAllDayCount()
  -Map<DateTime, List<CalendarAppointment>> _getAppointmentCollectionOnDateBasis()
  -Widget? _getItem()
  -Widget _getMonthOrWeekHeader()
  -Widget _getDisplayDateView()
  -void _raiseCallbackForScheduleView()
  +Widget addAgenda()
  -double _getInitialScrollPosition()
  +Widget addAgendaWithLoadMore()
  -void _onKeyDown()
  +dynamic loadMoreAppointments()
  -void _updateViewChangePopup()
  -Widget _getCalendarViewPopup()
  -Widget _addResourcePanel()
  -void _handleOnLongPressForResourcePanel()
  -void _handleOnTapForResourcePanel()
  -List<dynamic> _getSelectedResourceAppointments()
  -CalendarResource _getTappedResource()
  -Widget _addCustomScrollView()
  -Widget _addChildren()
  -void _removeDatePicker()
  -void _updateDatePicker()
  -Widget _addDatePicker()
  -void _getCalendarStateDetails()
  -void _updateCalendarState()
  -void _handleOnTapForHeader()
  -void _handleOnLongPressForHeader()
  -DateTime _getTappedHeaderDate()
  -void _handleTapForAgenda()
  -void _handleLongPressForAgenda()
  -List<dynamic> _getSelectedAppointments()
  -Widget _addAgendaView()
}

"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::key.dart::Key"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<double>"
"calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_SfCalendarState"

class "calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidget" {
  +Widget child
  +ValueNotifier<double> opacity
  +State<StatefulWidget> createState()
}

"calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<double>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidget"

class "calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidgetState" {
  +void initState()
  +void didUpdateWidget()
  -void _update()
  +void dispose()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_OpacityWidgetState"

class "calendar_feature::src::calendar::sfcalendar.dart::_PopupWidget" {
  +Widget child
  +Alignment alignment
  +State<StatefulWidget> createState()
}

"calendar_feature::src::calendar::sfcalendar.dart::_PopupWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"calendar_feature::src::calendar::sfcalendar.dart::_PopupWidget" o-- "flutter::src::painting::alignment.dart::Alignment"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_PopupWidget"

class "calendar_feature::src::calendar::sfcalendar.dart::_PopupWidgetState" {
  -AnimationController _animationController
  -Animation<double> _animation
  +void initState()
  +void dispose()
  +Widget build()
}

"calendar_feature::src::calendar::sfcalendar.dart::_PopupWidgetState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::sfcalendar.dart::_PopupWidgetState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_PopupWidgetState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_PopupWidgetState"

class "calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" {
  +List<DateTime> visibleDates
  +TextStyle? todayTextStyle
  +CalendarHeaderStyle headerStyle
  +WeekNumberStyle weekNumberStyle
  +SfCalendarThemeData calendarTheme
  +DateTime? currentDate
  +CalendarView view
  +int numberOfWeeksInView
  +bool isRTL
  +String locale
  +bool showNavigationArrow
  +CalendarController controller
  +DateTime maxDate
  +DateTime minDate
  +double width
  +double height
  +List<int> nonWorkingDays
  +List<CalendarView>? allowedViews
  +bool allowViewNavigation
  +MonthNavigationDirection navigationDirection
  +void Function() removePicker
  +void Function(double) headerTapCallback
  +void Function(double) headerLongPressCallback
  +bool showDatePickerButton
  +bool showTodayButton
  +SfLocalizations localizations
  +ValueNotifier<DateTime?> valueChangeNotifier
  +ValueNotifier<bool> viewChangeNotifier
  +bool isPickerShown
  +double textScaleFactor
  +Color? todayHighlightColor
  +bool isMobilePlatform
  +String? headerDateFormat
  +bool enableInteraction
  +bool showWeekNumber
  +ValueNotifier<DateTime?> timelineMonthWeekNumberNotifier
  +Color? cellBorderColor
  +int numberOfDaysInView
  +_CalendarHeaderViewState createState()
}

"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::settings::header_style.dart::CalendarHeaderStyle"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::common::enums.dart::MonthNavigationDirection"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "dart::ui::void Function()"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "calendar_feature::src::calendar::sfcalendar.dart::void Function(double)"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderView"

class "calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderViewState" {
  -Map<CalendarView, String> _calendarViews
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
  -void _updateHeaderChanged()
  -void _updateWeekNumberChangedForTimelineMonth()
  -void _backward()
  -void _forward()
  -Widget _getCalendarViewWidget()
  -String _getWeekNumberString()
  -String _getHeaderText()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_CalendarHeaderViewState"

class "calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" {
  +DateTime startDate
  +DateTime? endDate
  +bool isMonthLabel
  +bool isRTL
  +String locale
  +ScheduleViewSettings scheduleViewSettings
  -SfLocalizations _localizations
  +bool useMobilePlatformUI
  +ValueNotifier<ScheduleViewHoveringDetails?> agendaViewNotifier
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +bool isDisplayDate
  +double textScaleFactor
  -TextPainter _textPainter
  -Paint _backgroundPainter
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void paint()
  -void _addDisplayDateLabel()
  -void _addWeekLabel()
  -void _addMonthLabel()
  -void _updateTextPainter()
  +bool shouldRepaint()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
  +bool shouldRebuildSemantics()
}

"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_ScheduleLabelPainter"

class "calendar_feature::src::calendar::sfcalendar.dart::_ScheduleAppointmentView" {
  +RenderStack createRenderObject()
  +void updateRenderObject()
}

"flutter::src::widgets::basic.dart::Stack" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_ScheduleAppointmentView"

class "calendar_feature::src::calendar::sfcalendar.dart::_AppointmentViewHeaderRenderObject" {
  -ScrollableState? _scrollableState
  -RenderAbstractViewport _stackViewPort
  +ScrollableState? scrollableState
  -double _scrollableHeight
  +void attach()
  +void detach()
  +void paint()
  +void updateHeaderOffset()
  -double _getCurrentOffset()
  -double _getHeaderOffset()
}

"calendar_feature::src::calendar::sfcalendar.dart::_AppointmentViewHeaderRenderObject" o-- "flutter::src::widgets::scrollable.dart::ScrollableState"
"calendar_feature::src::calendar::sfcalendar.dart::_AppointmentViewHeaderRenderObject" o-- "flutter::src::rendering::viewport.dart::RenderAbstractViewport"
"flutter::src::rendering::stack.dart::RenderStack" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_AppointmentViewHeaderRenderObject"

class "calendar_feature::src::calendar::sfcalendar.dart::_CustomSplashFactory" {
  +InteractiveInkFeature create()
}

"flutter::src::material::ink_well.dart::InteractiveInkFeatureFactory" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_CustomSplashFactory"

class "calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" {
  -Offset _position
  -BorderRadius _borderRadius
  -double _targetRadius
  -Rect Function()? _clipCallback
  -bool _repositionToReferenceBox
  -Animation<double> _radius
  -AnimationController _radiusController
  -Animation<int> _alpha
  -AnimationController? _alphaController
  +void confirm()
  +void cancel()
  -void _handleAlphaStatusChanged()
  +void dispose()
  +void paintFeature()
}

"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "dart::ui::Offset"
"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "flutter::src::material::material.dart::Rect Function()"
"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash" o-- "flutter::src::animation::animation.dart::Animation<int>"
"flutter::src::material::ink_well.dart::InteractiveInkFeature" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_CustomSplash"

class "calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" {
  +DateTime? selectedDate
  +MonthViewSettings? monthViewSettings
  +ScheduleViewSettings? scheduleViewSettings
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +String locale
  +ValueNotifier<ScheduleViewHoveringDetails?> agendaDateNotifier
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +double viewWidth
  +bool isRTL
  +double textScaleFactor
  +bool isMobilePlatform
  -Paint _linePainter
  -TextPainter _textPainter
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void paint()
  -void _updateTextPainter()
  -void _addDayLabelForMobile()
  -void _addDayLabelForWeb()
  -void _drawTodayCircle()
  +bool shouldRepaint()
  +bool shouldRebuildSemantics()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "calendar_feature::src::calendar::settings::schedule_view_settings.dart::ScheduleViewSettings"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "dart::ui::Color"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<ScheduleViewHoveringDetails>"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::sfcalendar.dart::_AgendaDateTimePainter"

class "calendar_feature::src::calendar::sfcalendar.dart::_ScheduleViewDetails" {
  -double _height
  -double _intersectPoint
}

class "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment" {
  +DateTime startTime
  +DateTime endTime
  +bool isAllDay
  +String subject
  +Color color
  +String? startTimeZone
  +String? endTimeZone
  +String? recurrenceRule
  +List<DateTime>? recurrenceExceptionDates
  +String? notes
  +String? location
  +List<Object>? resourceIds
  +Object? recurrenceId
  +Object? id
  -AppointmentType _appointmentType
  +AppointmentType appointmentType
  +int hashCode
  -AppointmentType _getAppointmentType()
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment" o-- "dart::ui::Color"
"calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment" o-- "calendar_feature::src::calendar::common::enums.dart::AppointmentType"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::appointment_engine::appointment.dart::Appointment"

class "calendar_feature::src::calendar::appointment_engine::recurrence_helper.dart::RecurrenceHelper" {
  {static} -bool _isRecurrenceInBetweenSpecificRange()
  {static} -List<DateTime> _getDailyRecurrenceDateTimeCollection()
  {static} -List<DateTime> _getWeeklyRecurrenceDateTimeCollection()
  {static} -List<DateTime> _getMonthlyRecurrenceDateTimeCollection()
  {static} -List<DateTime> _getYearlyRecurrenceDateTimeCollection()
  {static} +List<DateTime> getRecurrenceDateTimeCollection()
  {static} +RecurrenceProperties parseRRule()
  {static} -String _getUntilRRule()
  {static} -String _getRRuleForDaily()
  {static} -String _getRRuleForWeekly()
  {static} -String _getRRuleForMonthly()
  {static} -String _getRRuleForYearly()
  {static} +String generateRRule()
  {static} -List<String> _findKeyIndex()
  {static} -List<String> _findWeeklyRule()
  {static} -int _getWeekDay()
  {static} +List<String> splitRule()
  {static} +DateTime getUntilEndDate()
  {static} -DateTime _getRecurrenceDateForNegativeValue()
  {static} -DateTime _getLastWeekDay()
  {static} -String _sortByDay()
}

class "calendar_feature::src::calendar::appointment_engine::month_appointment_helper.dart::MonthAppointmentHelper" {
  {static} -void _createVisibleAppointments()
  {static} -void _createAppointmentInfoForSpannedAppointment()
  {static} -void _setAppointmentPosition()
  {static} -bool _isInterceptAppointments()
  {static} -int _orderAppointmentViewBySpanned()
  {static} -void _updateAppointmentPosition()
  {static} +int getDateIndex()
  {static} -AppointmentView _createAppointmentView()
  {static} +void updateAppointmentDetails()
}

class "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties" {
  +RecurrenceType recurrenceType
  +int recurrenceCount
  +DateTime startDate
  +DateTime? endDate
  +int interval
  +RecurrenceRange recurrenceRange
  +List<WeekDays> weekDays
  +int week
  +int dayOfMonth
  +int dayOfWeek
  +int month
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceType"
"calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties" o-- "calendar_feature::src::calendar::common::enums.dart::RecurrenceRange"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::appointment_engine::recurrence_properties.dart::RecurrenceProperties"

abstract class "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource" {
  +List<dynamic>? appointments
  +List<CalendarResource>? resources
  +List<Appointment> getVisibleAppointments()
  +Appointment? getOccurrenceAppointment()
  +Object? getPatternAppointment()
  +DateTime getStartTime()
  +DateTime getEndTime()
  +String getSubject()
  +bool isAllDay()
  +Color getColor()
  +String? getNotes()
  +String? getLocation()
  +String? getStartTimeZone()
  +String? getEndTimeZone()
  +String? getRecurrenceRule()
  +List<DateTime>? getRecurrenceExceptionDates()
  +List<Object>? getResourceIds()
  +Object? getRecurrenceId()
  +Object? getId()
  +T? convertAppointmentToObject()
  #dynamic handleLoadMore()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSourceChangeNotifier" <|-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSource"

class "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSourceChangeNotifier" {
  -List<void Function(CalendarDataSourceAction, List<dynamic>)>? _listeners
  +void addListener()
  +void removeListener()
  +void notifyListeners()
  +void dispose()
}

"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::appointment_engine::calendar_datasource.dart::CalendarDataSourceChangeNotifier"

class "calendar_feature::src::calendar::appointment_engine::appointment_helper.dart::AppointmentHelper" {
  {static} +DateTime convertToStartTime()
  {static} +DateTime convertToEndTime()
  {static} +DateTime getMonthStartDate()
  {static} +DateTime getMonthEndDate()
  {static} +Duration getDifference()
  {static} +DateTime addDaysWithTime()
  {static} +bool isCalendarAppointment()
  {static} -bool _isSpanned()
  {static} +bool canAddSpanIcon()
  {static} +TextSpan getRecurrenceIcon()
  {static} +double getYPositionForSpanIcon()
  {static} +String getSpanAppointmentText()
  {static} +TextSpan getSpanIcon()
  {static} +bool canAddForwardSpanIcon()
  {static} +bool canAddBackwardSpanIcon()
  {static} +List<CalendarAppointment> getSelectedDateAppointments()
  {static} +TextStyle getAppointmentTextStyle()
  {static} -CalendarAppointment _copy()
  {static} +bool isAppointmentWithinVisibleDateRange()
  {static} +bool isDateRangeWithinVisibleDateRange()
  {static} -bool _isAppointmentInVisibleDateRange()
  {static} -bool _isAppointmentDateWithinVisibleDateRange()
  {static} -Location _timeZoneInfoToOlsonTimeZone()
  {static} +void resetAppointmentView()
  {static} +double timeToPosition()
  {static} +double getAppointmentHeightFromDuration()
  {static} -bool _isIntersectingAppointmentInDayView()
  {static} -bool _iterateAppointment()
  {static} -int _orderAppointmentsDescending()
  {static} +int orderAppointmentsAscending()
  {static} -AppointmentView _getAppointmentView()
  {static} +void setAppointmentPositionAndMaxPosition()
  {static} +DateTime convertTimeToAppointmentTimeZone()
  {static} +List<CalendarAppointment> getVisibleAppointments()
  {static} -CalendarAppointment _cloneRecurrenceAppointment()
  {static} +List<CalendarAppointment> generateCalendarAppointments()
  {static} -CalendarAppointment _createAppointment()
  {static} -void _updateTimeForInvalidEndTime()
  {static} -void _getRecurrenceAppointments()
}

class "calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" {
  +int rowCount
  +MonthCellStyle monthCellStyle
  +List<DateTime> visibleDates
  +bool isRTL
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ValueNotifier<Offset?> calendarCellNotifier
  +DateTime minDate
  +DateTime maxDate
  +SfCalendar calendar
  +bool showTrailingAndLeadingDates
  +List<DateTime>? blackoutDates
  +TextStyle? blackoutDatesTextStyle
  +double textScaleFactor
  +double width
  +double height
  +WeekNumberStyle weekNumberStyle
  +bool isMobilePlatform
  +Widget Function(BuildContext, MonthCellDetails)? builder
  +ValueNotifier<List<CalendarAppointment>?> visibleAppointmentNotifier
  +_MonthViewWidgetState createState()
}

"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, MonthCellDetails)"
"calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<CalendarAppointment>>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget"

class "calendar_feature::src::calendar::views::month_view.dart::_MonthViewWidgetState" {
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
  -void _updateAppointment()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::month_view.dart::_MonthViewWidgetState"

class "calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" {
  +int rowCount
  +MonthCellStyle monthCellStyle
  +List<DateTime> visibleDates
  +List<CalendarAppointment>? visibleAppointments
  +bool isRTL
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ValueNotifier<Offset?> calendarCellNotifier
  +DateTime minDate
  +DateTime maxDate
  +List<DateTime>? blackoutDates
  +TextStyle? blackoutDatesTextStyle
  +bool showTrailingAndLeadingDates
  +double textScaleFactor
  +double width
  +double height
  +WeekNumberStyle weekNumberStyle
  +double weekNumberPanelWidth
  +bool isMobilePlatform
  +_MonthViewRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObjectWidget"

class "calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" {
  -bool _isMobilePlatform
  -double _height
  -double _width
  -int _rowCount
  -double _textScaleFactor
  -Color? _todayHighlightColor
  -TextStyle? _todayTextStyle
  -Color? _cellBorderColor
  -DateTime _minDate
  -DateTime _maxDate
  -MonthCellStyle _monthCellStyle
  -bool _isRTL
  -bool _showTrailingAndLeadingDates
  -SfCalendarThemeData _calendarTheme
  -List<DateTime> _visibleDates
  -List<CalendarAppointment>? _visibleAppointments
  -List<DateTime>? _blackoutDates
  -TextStyle? _blackoutDatesTextStyle
  -ValueNotifier<Offset?> _calendarCellNotifier
  -WeekNumberStyle _weekNumberStyle
  -double _weekNumberPanelWidth
  -Paint _linePainter
  -TextPainter _textPainter
  {static} +double linePadding
  -List<int> _blackoutDatesIndex
  +bool isMobilePlatform
  +double height
  +double width
  +int rowCount
  +double textScaleFactor
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +Color? cellBorderColor
  +DateTime minDate
  +DateTime maxDate
  +MonthCellStyle monthCellStyle
  +bool isRTL
  +bool showTrailingAndLeadingDates
  +SfCalendarThemeData calendarTheme
  +List<DateTime> visibleDates
  +List<CalendarAppointment>? visibleAppointments
  +List<DateTime>? blackoutDates
  +TextStyle? blackoutDatesTextStyle
  +ValueNotifier<Offset?> calendarCellNotifier
  +WeekNumberStyle weekNumberStyle
  +double weekNumberPanelWidth
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  -void _updateBlackoutDatesIndex()
  -void _drawWeekNumber()
  -void _drawWeekNumberPanel()
  -void _drawMonthCells()
  -void _addMouseHovering()
  -void _drawVerticalAndHorizontalLines()
  -String _getAccessibilityText()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthCellStyle"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject" o-- "null::List<CustomPainterSemantics> Function(Size)"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::views::month_view.dart::_MonthViewRenderObject"

class "calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" {
  +SfCalendar calendar
  +CalendarView view
  +double width
  +double height
  +bool isRTL
  +String locale
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +CalendarController controller
  +void Function(UpdateCalendarStateDetails) updateCalendarState
  +void Function(UpdateCalendarStateDetails) getCalendarState
  +void Function() removePicker
  +ValueNotifier<DateTime?> agendaSelectedDate
  +ValueNotifier<DateTime?> timelineMonthWeekNumberNotifier
  +List<TimeRegion>? specialRegions
  +ScrollController? resourcePanelScrollController
  +List<CalendarResource>? resourceCollection
  +double textScaleFactor
  +bool isMobilePlatform
  +List<DateTime>? blackoutDates
  +AnimationController? fadeInController
  +DateTime minDate
  +DateTime maxDate
  +SfLocalizations localizations
  +void updateFocus()
  +CalendarDetails? getCalendarDetails()
  +void updateScrollPosition()
  +_CustomCalendarScrollViewState createState()
}

"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::void Function(UpdateCalendarStateDetails)"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "dart::ui::void Function()"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::CustomCalendarScrollView"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" {
  -_CalendarView _currentView
  -_CalendarView _nextView
  -_CalendarView _previousView
  -List<_CalendarView> _children
  -int _currentChildIndex
  -double _scrollStartPosition
  -double _position
  -AnimationController _animationController
  -Animation<double> _animation
  -Tween<double> _tween
  -List<DateTime> _visibleDates
  -List<DateTime> _previousViewVisibleDates
  -List<DateTime> _nextViewVisibleDates
  -List<DateTime> _currentViewVisibleDates
  -GlobalKey<_CalendarViewState> _previousViewKey
  -GlobalKey<_CalendarViewState> _currentViewKey
  -GlobalKey<_CalendarViewState> _nextViewKey
  -UpdateCalendarStateDetails _updateCalendarStateDetails
  -List<TimeRegion>? _timeRegions
  -double _timelineScrollStartPosition
  -double _timelineStartPosition
  -bool _isNeedTimelineScrollEnd
  -Drag? _drag
  -FocusScopeNode _focusNode
  -ValueNotifier<_DragPaintDetails> _dragDetails
  -Offset? _dragDifferenceOffset
  -Timer? _timer
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
  -void _handleAppointmentDragStart()
  -void _handleLongPressStart()
  -AppointmentView? _getDragAppointment()
  -void _handleLongPressMove()
  -dynamic _updateNavigationDayView()
  -dynamic _updateAutoScrollDragTimelineView()
  -void _updateAutoViewNavigationTimelineView()
  -void _updateAppointmentDragUpdateCallback()
  -void _handleLongPressEnd()
  -void _resetDraggingDetails()
  -List<DateTime> _getBlackoutDates()
  -List<CalendarTimeRegion> _getTimeRegions()
  -_CalendarViewState? _getCurrentViewByVisibleDates()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleDragCancel()
  -void _disposeDrag()
  -void _handlePointerSignal()
  -void _updateVisibleDates()
  -void _updateNextViewVisibleDates()
  -void _updatePreviousViewVisibleDates()
  -void _getCalendarViewStateDetails()
  -void _updateCalendarViewStateDetails()
  -CalendarTimeRegion _getCalendarTimeRegionFromTimeRegion()
  -List<CalendarTimeRegion> _getRegions()
  +void getRecurrenceRegions()
  +CalendarTimeRegion cloneRecurrenceRegion()
  -List<DateTime> _getDatesWithInVisibleDateRange()
  -List<Widget> _addViews()
  -_CalendarView _updateViews()
  +void animationListener()
  -bool _isTimeRegionsEquals()
  -void _selectResourceProgrammatically()
  -void _updateSelectedResourceIndex()
  -void _updateSelection()
  -void _updateMoveToDate()
  -CalendarDetails? _getCalendarDetails()
  -void _updateCurrentViewVisibleDates()
  -void _updateNextView()
  -void _updatePreviousView()
  -void _moveToNextViewWithAnimation()
  -void _moveToPreviousViewWithAnimation()
  -void _moveToPreviousWebViewWithAnimation()
  -void _moveToNextWebViewWithAnimation()
  -void _updateScrollPosition()
  -void _updateDayViewScrollPosition()
  -int _getRowOfDate()
  -DateTime _updateSelectedDateForRightArrow()
  -DateTime _updateSelectedDateForLeftArrow()
  -DateTime? _updateSelectedDateForUpArrow()
  -DateTime? _updateSelectedDateForDownArrow()
  -void _moveToSelectedTimeSlot()
  -DateTime? _updateSelectedDate()
  -bool _isSelectedDateEnabled()
  -KeyEventResult _updatePageUpAndDown()
  -KeyEventResult _updateAppointmentSelection()
  -KeyEventResult _updateAppointmentSelectionOnView()
  -void _updateScrollViewToAppointment()
  -KeyEventResult _onKeyDown()
  -void _positionTimelineView()
  -void _onHorizontalStart()
  -void _onHorizontalUpdate()
  -void _onHorizontalEnd()
  -void _onVerticalStart()
  -void _onVerticalUpdate()
  -void _onVerticalEnd()
  -void _clearSelection()
  -void _updateAllDayPanel()
  -void _updateAppointmentPainter()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::animation::tween.dart::Tween<double>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::widgets::framework.dart::GlobalKey<_CalendarViewState>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::gestures::drag.dart::Drag"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::widgets::focus_manager.dart::FocusScopeNode"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<_DragPaintDetails>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "dart::ui::Offset"
"calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CustomCalendarScrollViewState"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" {
  +List<DateTime> visibleDates
  +List<CalendarTimeRegion>? regions
  +List<DateTime>? blackoutDates
  +SfCalendar calendar
  +CalendarView view
  +double width
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +double height
  +String locale
  +ValueNotifier<DateTime?> agendaSelectedDate
  +ValueNotifier<DateTime?> timelineMonthWeekNumberNotifier
  +CalendarController controller
  +void Function() removePicker
  +void Function(UpdateCalendarStateDetails) updateCalendarState
  +void Function(UpdateCalendarStateDetails) getCalendarState
  +bool allowViewNavigation
  +FocusNode focusNode
  +ScrollController? resourcePanelScrollController
  +List<CalendarResource>? resourceCollection
  +double textScaleFactor
  +bool isMobilePlatform
  +DateTime minDate
  +DateTime maxDate
  +SfLocalizations localizations
  +ValueNotifier<_DragPaintDetails> dragDetails
  +_CalendarViewState createState()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "calendar_feature::src::calendar::common::calendar_controller.dart::CalendarController"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "dart::ui::void Function()"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::void Function(UpdateCalendarStateDetails)"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<_DragPaintDetails>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarView"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" {
  -double? _horizontalLinesCount
  -ScrollController? _scrollController
  -ScrollController? _timelineViewHeaderScrollController
  -ScrollController? _timelineViewVerticalScrollController
  -ScrollController? _timelineRulerController
  -AppointmentLayout _appointmentLayout
  -AnimationController? _timelineViewAnimationController
  -Animation<double>? _timelineViewAnimation
  -Tween<double> _timelineViewTween
  -TimelineViewHeaderView _timelineViewHeader
  -_SelectionPainter? _selectionPainter
  -double _allDayHeight
  -double _timeIntervalHeight
  -UpdateCalendarStateDetails _updateCalendarStateDetails
  -ValueNotifier<SelectionDetails?> _allDaySelectionNotifier
  -ValueNotifier<Offset?> _viewHeaderNotifier
  -ValueNotifier<Offset?> _calendarCellNotifier
  -ValueNotifier<Offset?> _allDayNotifier
  -ValueNotifier<Offset?> _appointmentHoverNotifier
  -ValueNotifier<bool> _selectionNotifier
  -ValueNotifier<bool> _timelineViewHeaderNotifier
  -bool _isRTL
  -bool _isExpanded
  -DateTime? _hoveringDate
  -SystemMouseCursor _mouseCursor
  -AppointmentView? _hoveringAppointmentView
  -int _selectedResourceIndex
  -AnimationController? _animationController
  -Animation<double>? _heightAnimation
  -Animation<double>? _allDayExpanderAnimation
  -AnimationController? _expanderAnimationController
  -MonthViewWidget _monthView
  -GlobalKey<State<StatefulWidget>> _appointmentLayoutKey
  -Timer? _timer
  -Timer? _autoScrollTimer
  -ValueNotifier<int> _currentTimeNotifier
  -ValueNotifier<_ResizingPaintDetails> _resizingDetails
  -double? _maximumResizingPosition
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
  -Timer? _createTimer()
  -void _updateResourcePanelScroll()
  -void _updateResourceScroll()
  -Widget _getMonthView()
  -Widget _getDayView()
  -void _updateAllDayHeight()
  -Widget _getTimelineView()
  -void _timelineViewHoveringUpdate()
  -void _scrollAnimationListener()
  -void _scrollToPosition()
  -double _getScrollPositionForCurrentDate()
  -void _retainScrolledDateTime()
  -double _getPositionFromDate()
  -void _expandOrCollapseAllDay()
  -void _timeRulerListener()
  -void _scrollListener()
  -void _updateTimeSlotView()
  -void _updateHorizontalLineCount()
  -void _updateTimelineViews()
  -void _getPainterProperties()
  -Widget _addAllDayAppointmentPanel()
  -Widget _getAllDayLayout()
  -Widget _addAppointmentPainter()
  -void _onVerticalStart()
  -void _onVerticalUpdate()
  -void _onVerticalEnd()
  -void _onHorizontalStart()
  -void _onHorizontalUpdate()
  -void _onHorizontalEnd()
  -dynamic _updateAutoScrollDay()
  -dynamic _updateAutoScrollTimeline()
  -void _updateMaximumResizingPosition()
  -void _updateAppointmentResizingUpdateCallback()
  -void _resetResizingPainter()
  -Widget _addMonthView()
  -Widget _getMonthWidget()
  -Widget _getResizeShadowView()
  -Widget _addDayView()
  -Widget _getCurrentTimeIndicator()
  -void _updateProgrammaticSelectedResourceIndex()
  -Widget _addTimelineView()
  -CalendarDetails? _getCalendarViewDetails()
  -CalendarDetails? _getDetailsForMonth()
  -void _handleOnTapForMonth()
  -AppointmentView? _handleTouchOnMonthView()
  -void _updatedSelectionChangedCallback()
  -void _handleMonthCellTapNavigation()
  -void _handleOnTapForTimeline()
  -int _getSelectedResourceIndex()
  -CalendarDetails? _getDetailsForTimeline()
  -AppointmentView? _handleTouchOnTimeline()
  -void _updateAllDaySelection()
  -void _handleOnTapForDay()
  -CalendarDetails? _getDetailsForDay()
  -AppointmentView? _handleTouchOnDayView()
  -bool _isEnabledRegion()
  -bool _isAutoTimeIntervalHeight()
  -double _getTimeIntervalWidth()
  -double _getTimeIntervalHeight()
  -bool _isValidWidth()
  -void _handleOnTapForViewHeader()
  -void _handleOnLongPressForViewHeader()
  -void _handleViewHeaderTapNavigation()
  -DateTime? _getTappedViewHeaderDate()
  -void _updateHoveringForAppointment()
  -void _updateHoveringForAllDayPanel()
  -void _removeViewHeaderHovering()
  -void _removeAllWidgetHovering()
  -void _updateHoveringForViewHeader()
  -void _updateDraggingMouseCursor()
  -void _updateDisabledCellMouseCursor()
  -void _updateMouseCursorForAppointment()
  -void _updatePointerHover()
  -void _pointerEnterEvent()
  -void _pointerHoverEvent()
  -void _pointerExitEvent()
  -AppointmentView? _getAllDayAppointmentOnPoint()
  -List<dynamic> _getSelectedAppointments()
  -DateTime? _getDateFromPositionForMonth()
  -DateTime? _getDateFromPositionForWeek()
  -DateTime? _getDateFromPositionForTimeline()
  -DateTime? _getDateFromPosition()
  -void _drawSelection()
  -_SelectionPainter _addSelectionView()
  -Widget _getTimelineViewHeader()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::appointment_layout::appointment_layout.dart::AppointmentLayout"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::animation::tween.dart::Tween<double>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<SelectionDetails>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::services::mouse_cursor.dart::SystemMouseCursor"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "calendar_feature::src::calendar::views::month_view.dart::MonthViewWidget"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "dart::async::Timer"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<_ResizingPaintDetails>"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarViewState"

class "calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" {
  +CalendarView view
  +ViewHeaderStyle viewHeaderStyle
  +TimeSlotViewSettings timeSlotViewSettings
  +MonthViewSettings monthViewSettings
  +List<DateTime> visibleDates
  +double timeLabelWidth
  +double viewHeaderHeight
  +SfCalendarThemeData calendarTheme
  +bool isRTL
  +String locale
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +Color? cellBorderColor
  +DateTime minDate
  +DateTime maxDate
  +ValueNotifier<Offset?> viewHeaderNotifier
  +double textScaleFactor
  -Paint _circlePainter
  -TextPainter _dayTextPainter
  -TextPainter _dateTextPainter
  +bool showWeekNumber
  +bool isMobilePlatform
  +WeekNumberStyle weekNumberStyle
  +SfLocalizations localizations
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void paint()
  -void _addViewHeaderForMonthView()
  -void _addViewHeaderForTimeSlotViews()
  -void _addMouseHoverForMonth()
  -void _addMouseHoverForTimeSlotView()
  -String _updateViewHeaderFormat()
  -void _updateDayTextPainter()
  -double _getViewHeaderWidth()
  +bool shouldRepaint()
  -void _drawTodayCircle()
  +bool shouldRebuildSemantics()
  -String _getAccessibilityText()
  -List<CustomPainterSemantics> _getSemanticsForMonthViewHeader()
  -List<CustomPainterSemantics> _getSemanticsForDayHeader()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "calendar_feature::src::calendar::settings::month_view_settings.dart::MonthViewSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "calendar_feature::src::calendar::settings::week_number_style.dart::WeekNumberStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "syncfusion_flutter_core::src::localizations::global_localizations.dart::SfLocalizations"
"calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_ViewHeaderViewPainter"

class "calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" {
  +SfCalendar calendar
  +CalendarView view
  +SfCalendarThemeData calendarTheme
  +List<DateTime> visibleDates
  +Decoration? selectionDecoration
  +DateTime? selectedDate
  +double timeIntervalHeight
  +bool isRTL
  +void Function(UpdateCalendarStateDetails) getCalendarState
  +int selectedResourceIndex
  +double? resourceItemHeight
  -BoxPainter _boxPainter
  +AppointmentView? appointmentView
  -double _cellWidth
  -double _cellHeight
  -double _xPosition
  -double _yPosition
  +ValueNotifier<bool> repaintNotifier
  -UpdateCalendarStateDetails _updateCalendarStateDetails
  +bool showWeekNumber
  +bool isMobilePlatform
  +void paint()
  +bool? hitTest()
  -void _drawMonthSelection()
  -void _drawDaySelection()
  -DateTime _updateSelectedDate()
  -void _drawWeekSelection()
  -double _getTimelineYPosition()
  -void _drawTimelineMonthSelection()
  -void _drawTimelineWeekSelection()
  -void _drawAppointmentSelection()
  -void _updateSelectionDecorationPainter()
  -void _drawSlotSelection()
  +bool shouldRepaint()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "flutter::src::painting::decoration.dart::Decoration"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::void Function(UpdateCalendarStateDetails)"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "flutter::src::painting::decoration.dart::BoxPainter"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::UpdateCalendarStateDetails"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_SelectionPainter"

class "calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" {
  +double horizontalLinesCount
  +double timeIntervalHeight
  +TimeSlotViewSettings timeSlotViewSettings
  +bool isRTL
  +String locale
  +SfCalendarThemeData calendarTheme
  +Color? cellBorderColor
  +bool isTimelineView
  +List<DateTime> visibleDates
  +double textScaleFactor
  -Paint _linePainter
  -TextPainter _textPainter
  +void paint()
  -void _drawTimeLabels()
  +bool shouldRepaint()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_TimeRulerView"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarMultiChildContainer" {
  +CustomPainter? painter
  +double width
  +double height
  +RenderStack createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_CalendarMultiChildContainer" o-- "flutter::src::rendering::custom_paint.dart::CustomPainter"
"flutter::src::widgets::basic.dart::Stack" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CalendarMultiChildContainer"

class "calendar_feature::src::calendar::views::calendar_view.dart::_MultiChildContainerRenderObject" {
  -CustomPainter? _painter
  -double _width
  -double _height
  -List<SemanticsNode>? _cacheNodes
  +CustomPainter? painter
  +double width
  +double height
  -List<CustomPainterSemantics> Function(Size) _semanticsBuilder
  -void _updatePainter()
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_MultiChildContainerRenderObject" o-- "flutter::src::rendering::custom_paint.dart::CustomPainter"
"calendar_feature::src::calendar::views::calendar_view.dart::_MultiChildContainerRenderObject" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::stack.dart::RenderStack" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_MultiChildContainerRenderObject"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CustomNeverScrollableScrollPhysics" {
  +_CustomNeverScrollableScrollPhysics applyTo()
}

"flutter::src::widgets::scroll_physics.dart::NeverScrollableScrollPhysics" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CustomNeverScrollableScrollPhysics"

class "calendar_feature::src::calendar::views::calendar_view.dart::_CurrentTimeIndicator" {
  +double timeIntervalSize
  +TimeSlotViewSettings timeSlotViewSettings
  +bool isTimelineView
  +List<DateTime> visibleDates
  +double timeRulerSize
  +Color? todayHighlightColor
  +bool isRTL
  +void paint()
  +bool? hitTest()
  +bool shouldRepaint()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_CurrentTimeIndicator" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_CurrentTimeIndicator" o-- "dart::ui::Color"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_CurrentTimeIndicator"

class "calendar_feature::src::calendar::views::calendar_view.dart::_ResizingPaintDetails" {
  +AppointmentView? appointmentView
  +ValueNotifier<Offset?> position
  +bool isAllDayPanel
  +double? scrollPosition
  +int monthRowCount
  +double? monthCellHeight
  +Color appointmentColor
  +DateTime? resizingTime
}

"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingPaintDetails" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingPaintDetails" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingPaintDetails" o-- "dart::ui::Color"

class "calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" {
  +ValueNotifier<_ResizingPaintDetails> resizingDetails
  +bool isRTL
  +double textScaleFactor
  +bool isMobilePlatform
  +TextStyle appointmentTextStyle
  +double allDayHeight
  +double viewHeaderHeight
  +ScrollController? scrollController
  +CalendarView view
  +double weekNumberPanelWidth
  +SystemMouseCursor mouseCursor
  +SfCalendarThemeData calendarTheme
  +DragAndDropSettings dragAndDropSettings
  +double timeLabelWidth
  +double timeIntervalHeight
  -Paint _shadowPainter
  -TextPainter _textPainter
  +void paint()
  -void _drawTimeIndicator()
  +bool shouldRepaint()
  -void _addSubjectTextForTimeslotViews()
  -void _addSubjectTextForMonthView()
  -void _updateTextPainter()
  -void _addRecurrenceIcon()
  -void _updatePainterMaxLines()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<_ResizingPaintDetails>"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "flutter::src::services::mouse_cursor.dart::SystemMouseCursor"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_ResizingAppointmentPainter"

class "calendar_feature::src::calendar::views::calendar_view.dart::_DragPaintDetails" {
  +AppointmentView? appointmentView
  +ValueNotifier<Offset?> position
  +DateTime? draggingTime
  +double? timeIntervalHeight
}

"calendar_feature::src::calendar::views::calendar_view.dart::_DragPaintDetails" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"
"calendar_feature::src::calendar::views::calendar_view.dart::_DragPaintDetails" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"

class "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" {
  +ValueNotifier<_DragPaintDetails> dragDetails
  +bool isRTL
  +double textScaleFactor
  +bool isMobilePlatform
  +TextStyle appointmentTextStyle
  +DragAndDropSettings dragAndDropSettings
  +CalendarView calendarView
  +double allDayPanelHeight
  +double viewHeaderHeight
  +double timeLabelWidth
  +double resourceItemHeight
  +SfCalendarThemeData calendarTheme
  +SfCalendar calendar
  +double width
  +double height
  +_DraggingAppointmentState createState()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<_DragPaintDetails>"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget" o-- "calendar_feature::src::calendar::sfcalendar.dart::SfCalendar"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentWidget"

class "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentState" {
  -AppointmentView? _draggingAppointmentView
  +void initState()
  +void dispose()
  -void _updateDraggingAppointment()
  +Widget build()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentState" o-- "calendar_feature::src::calendar::common::calendar_view_helper.dart::AppointmentView"
"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentState"

class "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" {
  +_DragPaintDetails dragDetails
  +bool isRTL
  +double textScaleFactor
  +bool isMobilePlatform
  +TextStyle appointmentTextStyle
  +DragAndDropSettings dragAndDropSettings
  +CalendarView calendarView
  +double allDayPanelHeight
  +double viewHeaderHeight
  +double timeLabelWidth
  +double resourceItemHeight
  +SfCalendarThemeData calendarTheme
  +double width
  +double height
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" o-- "calendar_feature::src::calendar::views::calendar_view.dart::_DragPaintDetails"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" o-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"flutter::src::widgets::framework.dart::SingleChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObjectWidget"

class "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" {
  -double _width
  -double _height
  -_DragPaintDetails _dragDetails
  -bool _isRTL
  -double _textScaleFactor
  -bool _isMobilePlatform
  -TextStyle _appointmentTextStyle
  -DragAndDropSettings _dragAndDropSettings
  -CalendarView _calendarView
  -double _allDayPanelHeight
  -double _viewHeaderHeight
  -double _timeLabelWidth
  -double _resourceItemHeight
  -SfCalendarThemeData _calendarTheme
  -Paint _shadowPainter
  -TextPainter _textPainter
  +double width
  +double height
  +_DragPaintDetails dragDetails
  +bool isRTL
  +double textScaleFactor
  +bool isMobilePlatform
  +TextStyle appointmentTextStyle
  +DragAndDropSettings dragAndDropSettings
  +CalendarView calendarView
  +double allDayPanelHeight
  +double viewHeaderHeight
  +double timeLabelWidth
  +double resourceItemHeight
  +SfCalendarThemeData calendarTheme
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  -void _drawDefaultUI()
  -void _drawTimeIndicator()
  -void _updatePainterMaxLines()
}

"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "calendar_feature::src::calendar::views::calendar_view.dart::_DragPaintDetails"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "calendar_feature::src::calendar::settings::drag_and_drop_settings.dart::DragAndDropSettings"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "calendar_feature::src::calendar::common::enums.dart::CalendarView"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"flutter::src::rendering::box.dart::RenderBox" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject"
"flutter::src::rendering::object.dart::RenderObjectWithChildMixin" <|-- "calendar_feature::src::calendar::views::calendar_view.dart::_DraggingAppointmentRenderObject"

class "calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" {
  +List<DateTime> visibleDates
  +double horizontalLinesCount
  +double timeIntervalHeight
  +double timeLabelWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +TimeSlotViewSettings timeSlotViewSettings
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +List<CalendarTimeRegion>? specialRegion
  +double textScaleFactor
  +Widget Function(BuildContext, TimeRegionDetails)? timeRegionBuilder
  +double width
  +double height
  +DateTime minDate
  +DateTime maxDate
  +_TimeSlotWidgetState createState()
}

"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, TimeRegionDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::day_view.dart::TimeSlotWidget"

class "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotWidgetState" {
  -List<Widget> _children
  -List<TimeRegionView> _specialRegionViews
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  -void _updateSpecialRegionDetails()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotWidgetState"

class "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" {
  +List<DateTime> visibleDates
  +double horizontalLinesCount
  +double timeIntervalHeight
  +double timeLabelWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +TimeSlotViewSettings timeSlotViewSettings
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +List<CalendarTimeRegion>? specialRegion
  +double textScaleFactor
  +double width
  +double height
  +List<TimeRegionView> specialRegionBounds
  +DateTime minDate
  +DateTime maxDate
  +_TimeSlotRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderWidget"

class "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" {
  -List<DateTime> _visibleDates
  -double _horizontalLinesCount
  -double _timeIntervalHeight
  -double _timeLabelWidth
  -Color? _cellBorderColor
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -TimeSlotViewSettings _timeSlotViewSettings
  -bool _isRTL
  -ValueNotifier<Offset?> _calendarCellNotifier
  -double _width
  -double _height
  -DateTime _minDate
  -DateTime _maxDate
  -double _textScaleFactor
  -List<CalendarTimeRegion>? _specialRegion
  +List<TimeRegionView> specialRegionBounds
  -double _cellWidth
  -Paint _linePainter
  +List<DateTime> visibleDates
  +double horizontalLinesCount
  +double timeIntervalHeight
  +double timeLabelWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +TimeSlotViewSettings timeSlotViewSettings
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +double width
  +double height
  +DateTime minDate
  +DateTime maxDate
  +double textScaleFactor
  +List<CalendarTimeRegion>? specialRegion
  +bool isRepaintBoundary
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  -void _minMaxExceeds()
  -void _drawDisabledDate()
  -void _drawTimeSlots()
  -void _addMouseHoveringForTimeSlot()
  -void _addSpecialRegions()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject" o-- "null::List<CustomPainterSemantics> Function(Size)"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::views::day_view.dart::_TimeSlotRenderObject"

class "calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" {
  +double horizontalLinesCountPerView
  +List<DateTime> visibleDates
  +TimeSlotViewSettings timeSlotViewSettings
  +double timeIntervalWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +ScrollController scrollController
  +List<CalendarTimeRegion>? specialRegion
  +double resourceItemHeight
  +List<CalendarResource>? resourceCollection
  +double textScaleFactor
  +bool isMobilePlatform
  +double width
  +double height
  +Widget Function(BuildContext, TimeRegionDetails)? timeRegionBuilder
  +DateTime minDate
  +DateTime maxDate
  +List<DateTime>? blackoutDates
  +_TimelineWidgetState createState()
}

"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, TimeRegionDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::views::timeline_view.dart::TimelineWidget"

class "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineWidgetState" {
  -List<Widget> _children
  -List<TimeRegionView> _specialRegionViews
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  -void _updateSpecialRegionDetails()
  -void _updateSpecialRegionRect()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineWidgetState"

class "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" {
  +double horizontalLinesCountPerView
  +List<DateTime> visibleDates
  +TimeSlotViewSettings timeSlotViewSettings
  +double timeIntervalWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +ScrollController scrollController
  +List<CalendarTimeRegion>? specialRegion
  +double resourceItemHeight
  +List<CalendarResource>? resourceCollection
  +double textScaleFactor
  +bool isMobilePlatform
  +double width
  +double height
  +List<TimeRegionView> specialRegionBounds
  +DateTime minDate
  +DateTime maxDate
  +List<DateTime>? blackoutDates
  +_TimelineRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderWidget"

class "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" {
  -double _horizontalLinesCountPerView
  -List<DateTime> _visibleDates
  -TimeSlotViewSettings _timeSlotViewSettings
  -double _timeIntervalWidth
  -Color? _cellBorderColor
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -double _resourceItemHeight
  +List<CalendarResource>? resourceCollection
  -bool _isRTL
  -ValueNotifier<Offset?> _calendarCellNotifier
  -double _width
  -double _height
  -double _textScaleFactor
  -List<CalendarTimeRegion>? _specialRegion
  +List<TimeRegionView> specialRegionBounds
  -DateTime _minDate
  -DateTime _maxDate
  -List<DateTime>? _blackoutDates
  +ScrollController scrollController
  +bool isMobilePlatform
  -Paint _linePainter
  +double horizontalLinesCountPerView
  +List<DateTime> visibleDates
  +TimeSlotViewSettings timeSlotViewSettings
  +double timeIntervalWidth
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +double resourceItemHeight
  +bool isRTL
  +ValueNotifier<Offset?> calendarCellNotifier
  +double width
  +double height
  +double textScaleFactor
  +List<CalendarTimeRegion>? specialRegion
  +DateTime minDate
  +DateTime maxDate
  +List<DateTime>? blackoutDates
  +bool isRepaintBoundary
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  -void _minMaxExceeds()
  -void _drawDisabledDate()
  -void _drawTimeline()
  -void _addMouseHovering()
  -void _addSpecialRegion()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
  -List<CustomPainterSemantics> _getAccessibilityDates()
  -String _getAccessibilityText()
}

"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject" o-- "null::List<CustomPainterSemantics> Function(Size)"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::views::timeline_view.dart::_TimelineRenderObject"

class "calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" {
  +List<DateTime> visibleDates
  +ViewHeaderStyle viewHeaderStyle
  +TimeSlotViewSettings timeSlotViewSettings
  +double viewHeaderHeight
  +Color? todayHighlightColor
  +TextStyle? todayTextStyle
  +ValueNotifier<bool> repaintNotifier
  +ScrollController timelineViewHeaderScrollController
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +bool isRTL
  +String locale
  +DateTime minDate
  +DateTime maxDate
  +ValueNotifier<Offset?> viewHeaderNotifier
  +Color? cellBorderColor
  +List<DateTime>? blackoutDates
  +TextStyle? blackoutDatesTextStyle
  +double textScaleFactor
  -double _padding
  -double _xPosition
  -TextPainter _dayTextPainter
  -TextPainter _dateTextPainter
  -Paint _hoverPainter
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void paint()
  -void _drawTimelineTimeSlotsViewHeader()
  -void _drawTimelineMonthViewHeader()
  -void _addMouseHovering()
  +bool shouldRepaint()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
  -String _getAccessibilityText()
  +bool shouldRebuildSemantics()
}

"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "calendar_feature::src::calendar::settings::view_header_style.dart::ViewHeaderStyle"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "calendar_feature::src::calendar::settings::time_slot_view_settings.dart::TimeSlotViewSettings"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "dart::ui::Color"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::painting::text_style.dart::TextStyle"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Offset>"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "calendar_feature::src::calendar::views::timeline_view.dart::TimelineViewHeaderView"

class "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource" {
  +String displayName
  +Object id
  +Color color
  +ImageProvider<Object>? image
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource" o-- "dart::ui::Color"
"calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource" o-- "flutter::src::painting::image_provider.dart::ImageProvider<Object>"
"flutter::src::foundation::diagnostics.dart::Diagnosticable" <|-- "calendar_feature::src::calendar::resource_view::calendar_resource.dart::CalendarResource"

class "calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" {
  +List<CalendarResource>? resources
  +ResourceViewSettings resourceViewSettings
  +double resourceItemHeight
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<bool> notifier
  +bool isRTL
  +double textScaleFactor
  +Map<Object, DecorationImagePainter> imagePainterCollection
  +Offset? mouseHoverPosition
  +double width
  +double panelHeight
  +Widget Function(BuildContext, ResourceViewHeaderDetails)? resourceViewHeaderBuilder
  +_ResourceViewWidgetState createState()
}

"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "dart::ui::Offset"
"calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget" o-- "calendar_feature::src::calendar::common::event_args.dart::Widget Function(BuildContext, ResourceViewHeaderDetails)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "calendar_feature::src::calendar::resource_view::resource_view.dart::ResourceViewWidget"

class "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewWidgetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewWidgetState"

class "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" {
  +List<CalendarResource>? resources
  +ResourceViewSettings resourceViewSettings
  +double resourceItemHeight
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<bool> notifier
  +bool isRTL
  +double textScaleFactor
  +Offset? mouseHoverPosition
  +Map<Object, DecorationImagePainter> imagePainterCollection
  +double width
  +double panelHeight
  +_ResourceViewRenderObject createRenderObject()
  +void updateRenderObject()
}

"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "dart::ui::Color"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget" o-- "dart::ui::Offset"
"flutter::src::widgets::framework.dart::MultiChildRenderObjectWidget" <|-- "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObjectWidget"

class "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" {
  -List<CalendarResource>? _resources
  -ResourceViewSettings _resourceViewSettings
  -double _resourceItemHeight
  -Color? _cellBorderColor
  -SfCalendarThemeData _calendarTheme
  -ThemeData _themeData
  -ValueNotifier<bool> _notifier
  -bool _isRTL
  -double _textScaleFactor
  -Offset? _mouseHoverPosition
  -Map<Object, DecorationImagePainter> _imagePainterCollection
  -double _width
  -double _panelHeight
  -Paint _circlePainter
  -TextPainter _namePainter
  -double _borderThickness
  +List<CalendarResource>? resources
  +ResourceViewSettings resourceViewSettings
  +double resourceItemHeight
  +Color? cellBorderColor
  +SfCalendarThemeData calendarTheme
  +ThemeData themeData
  +ValueNotifier<bool> notifier
  +bool isRTL
  +double textScaleFactor
  +Offset? mouseHoverPosition
  +Map<Object, DecorationImagePainter> imagePainterCollection
  +double width
  +double panelHeight
  +List<CustomPainterSemantics> Function(Size) semanticsBuilder
  +void attach()
  +void detach()
  +void performLayout()
  +void paint()
  -void _resourceViewHeader()
  -void _addHovering()
  -void _drawResourceBackground()
  -void _updateNamePainter()
  -void _drawResourceBorder()
  -void _drawDisplayName()
  -void _drawImage()
  -DecorationImagePainter? _getImagePainter()
  -void _onPainterChanged()
  -void _drawInnerCircle()
  -List<CustomPainterSemantics> _getSemanticsBuilder()
}

"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "calendar_feature::src::calendar::settings::resource_view_settings.dart::ResourceViewSettings"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "dart::ui::Color"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "syncfusion_flutter_core::src::theme::calendar_theme.dart::SfCalendarThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "flutter::src::material::theme_data.dart::ThemeData"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "dart::ui::Offset"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "dart::ui::Paint"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "flutter::src::painting::text_painter.dart::TextPainter"
"calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject" o-- "flutter::src::rendering::custom_paint.dart::List<CustomPainterSemantics> Function(Size)"
"calendar_feature::src::calendar::common::calendar_view_helper.dart::CustomCalendarRenderObject" <|-- "calendar_feature::src::calendar::resource_view::resource_view.dart::_ResourceViewRenderObject"


@enduml